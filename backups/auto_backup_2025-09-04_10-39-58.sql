-- Database Backup for arc-hive-maindb
-- Generated: 2025-09-04 10:39:58
-- Type: Automatic

-- Table structure for departments

CREATE TABLE `departments` (
  `department_id` int(11) NOT NULL AUTO_INCREMENT,
  `department_name` varchar(255) NOT NULL COMMENT 'Name of the department',
  `department_type` enum('college','office','sub_department') NOT NULL COMMENT 'Type (e.g., college, office, sub_department)',
  `name_type` enum('Academic','Administrative','Program') NOT NULL COMMENT 'Category (e.g., Academic, Administrative, Program)',
  `parent_department_id` int(11) DEFAULT NULL COMMENT 'Recursive reference to parent department',
  `folder_path` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`department_id`),
  UNIQUE KEY `idx_department_name` (`department_name`),
  UNIQUE KEY `unique_folder_path` (`folder_path`) USING HASH,
  KEY `fk_departments_parent` (`parent_department_id`),
  KEY `idx_departments_folder_path` (`folder_path`(768))
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for departments
INSERT INTO `departments` VALUES ('1','College of Education','college','Academic',NULL,'Uploads/College of Education');
INSERT INTO `departments` VALUES ('2','College of Arts and Sciences','college','Academic',NULL,'Uploads/College of Arts and Sciences');
INSERT INTO `departments` VALUES ('3','College of Engineering and Technology','college','Academic',NULL,'Uploads/College of Engineering and Technology');
INSERT INTO `departments` VALUES ('4','College of Business and Management','college','Academic',NULL,'Uploads/College of Business and Management');
INSERT INTO `departments` VALUES ('5','College of Agriculture and Forestry','college','Academic',NULL,'Uploads/College of Agriculture and Forestry');
INSERT INTO `departments` VALUES ('6','College of Veterinary Medicine','college','Academic',NULL,'Uploads/College of Veterinary Medicine');
INSERT INTO `departments` VALUES ('7','Bachelor of Elementary Education','sub_department','Program','1','Uploads/College of Education/Bachelor of Elementary Education');
INSERT INTO `departments` VALUES ('8','Early Childhood Education','sub_department','Program','1','Uploads/College of Education/Early Childhood Education');
INSERT INTO `departments` VALUES ('9','Secondary Education','sub_department','Program','1','Uploads/College of Education/Secondary Education');
INSERT INTO `departments` VALUES ('10','Technology and Livelihood Education','sub_department','Program','1','Uploads/College of Education/Technology and Livelihood Education');
INSERT INTO `departments` VALUES ('11','BS Development Communication','sub_department','Program','2','Uploads/College of Arts and Sciences/BS Development Communication');
INSERT INTO `departments` VALUES ('12','BS Psychology','sub_department','Program','2','Uploads/College of Arts and Sciences/BS Psychology');
INSERT INTO `departments` VALUES ('13','AB Economics','sub_department','Program','2','Uploads/College of Arts and Sciences/AB Economics');
INSERT INTO `departments` VALUES ('14','BS Geodetic Engineering','sub_department','Program','3','Uploads/College of Engineering and Technology/BS Geodetic Engineering');
INSERT INTO `departments` VALUES ('15','BS Agricultural and Biosystems Engineering','sub_department','Program','3','Uploads/College of Engineering and Technology/BS Agricultural and Biosystems Engineering');
INSERT INTO `departments` VALUES ('16','BS Information Technology','sub_department','Program','3','Uploads/College of Engineering and Technology/BS Information Technology');
INSERT INTO `departments` VALUES ('17','BS Business Administration','sub_department','Program','4','Uploads/College of Business and Management/BS Business Administration');
INSERT INTO `departments` VALUES ('18','BS Tourism Management','sub_department','Program','4','Uploads/College of Business and Management/BS Tourism Management');
INSERT INTO `departments` VALUES ('19','BS Entrepreneurship','sub_department','Program','4','Uploads/College of Business and Management/BS Entrepreneurship');
INSERT INTO `departments` VALUES ('20','BS Agribusiness','sub_department','Program','4','Uploads/College of Business and Management/BS Agribusiness');
INSERT INTO `departments` VALUES ('21','BS Agriculture','sub_department','Program','5','Uploads/College of Agriculture and Forestry/BS Agriculture');
INSERT INTO `departments` VALUES ('22','BS Forestry','sub_department','Program','5','Uploads/College of Agriculture and Forestry/BS Forestry');
INSERT INTO `departments` VALUES ('23','BS Animal Science','sub_department','Program','5','Uploads/College of Agriculture and Forestry/BS Animal Science');
INSERT INTO `departments` VALUES ('24','BS Food Technology','sub_department','Program','5','Uploads/College of Agriculture and Forestry/BS Food Technology');
INSERT INTO `departments` VALUES ('25','Doctor of Veterinary Medicine','sub_department','Program','6','Uploads/College of Veterinary Medicine/Doctor of Veterinary Medicine');
INSERT INTO `departments` VALUES ('26','Admission and Registration Services','office','Administrative',NULL,'Uploads/Admission and Registration Services');
INSERT INTO `departments` VALUES ('27','Audit Offices','office','Administrative',NULL,'Uploads/Audit Offices');
INSERT INTO `departments` VALUES ('28','External Linkages and International Affairs','office','Administrative',NULL,'Uploads/External Linkages and International Affairs');
INSERT INTO `departments` VALUES ('29','Management Information Systems','office','Administrative',NULL,'Uploads/Management Information Systems');
INSERT INTO `departments` VALUES ('30','Office of the President','office','Administrative',NULL,'Uploads/Office of the President');

-- Table structure for document_types

CREATE TABLE `document_types` (
  `document_type_id` int(11) NOT NULL AUTO_INCREMENT,
  `type_name` varchar(50) NOT NULL COMMENT 'Name of the document type (e.g., Memorandum)',
  `fields` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL CHECK (json_valid(`fields`)),
  `is_active` tinyint(1) NOT NULL DEFAULT 1 COMMENT 'Flag to enable/disable document type (1 = active, 0 = inactive)',
  PRIMARY KEY (`document_type_id`),
  KEY `idx_type_name` (`type_name`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Data for document_types
INSERT INTO `document_types` VALUES ('1','Academic Records','[{\"name\": \"record_id\", \"label\": \"Record ID\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');
INSERT INTO `document_types` VALUES ('2','Transcript of Records','[{\"name\": \"tor_id\", \"label\": \"TOR ID\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');
INSERT INTO `document_types` VALUES ('3','Diploma','[{\"name\": \"diploma_id\", \"label\": \"Diploma ID\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');
INSERT INTO `document_types` VALUES ('4','Memorandum','[{\"name\": \"memorandum_id\", \"label\": \"Memorandum Number\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');
INSERT INTO `document_types` VALUES ('5','Invoice','[{\"name\": \"invoice_number\", \"label\": \"Invoice Number\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');
INSERT INTO `document_types` VALUES ('6','Purchase Order','[{\"name\": \"po_number\", \"label\": \"Purchase Order Number\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');
INSERT INTO `document_types` VALUES ('7','Meeting','[{\"name\": \"meeting_id\", \"label\": \"Meeting ID\", \"type\": \"text\"}, {\"name\": \"date_released\", \"label\": \"Date Released\", \"type\": \"date\"}, {\"name\": \"date_received\", \"label\": \"Date Received\", \"type\": \"date\"}]','1');

-- Table structure for file_audit

CREATE TABLE `file_audit` (
  `audit_id` int(11) NOT NULL AUTO_INCREMENT,
  `file_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `action` varchar(50) DEFAULT NULL,
  `details` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`details`)),
  `timestamp` datetime DEFAULT current_timestamp(),
  PRIMARY KEY (`audit_id`),
  KEY `file_id` (`file_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `file_audit_ibfk_1` FOREIGN KEY (`file_id`) REFERENCES `files` (`file_id`) ON DELETE CASCADE,
  CONSTRAINT `file_audit_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Table structure for file_pages

CREATE TABLE `file_pages` (
  `page_id` int(11) NOT NULL AUTO_INCREMENT,
  `file_id` int(11) NOT NULL,
  `page_number` int(11) NOT NULL,
  `extracted_text` longtext DEFAULT NULL,
  `ocr_attempts` int(11) DEFAULT 0,
  `page_status` enum('pending','completed','failed') DEFAULT 'pending' COMMENT 'Page processing status',
  `extraction_date` datetime DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`page_id`),
  KEY `fk_file_pages_file` (`file_id`),
  KEY `idx_file_pages_page_number` (`file_id`,`page_number`),
  KEY `idx_file_pages_status` (`file_id`,`page_status`),
  KEY `idx_file_pages_ocr_attempts` (`file_id`,`ocr_attempts`),
  FULLTEXT KEY `ft_file_pages_extracted_text` (`extracted_text`),
  FULLTEXT KEY `extracted_text` (`extracted_text`),
  CONSTRAINT `fk_file_pages_file` FOREIGN KEY (`file_id`) REFERENCES `files` (`file_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=661 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Data for file_pages
INSERT INTO `file_pages` VALUES ('13','230','1','REPUBLIC OF THE PHILIPPINES\n\nDEPARTMENT OF TRANSPORTATION\nLAND TRANSPORTATION OFFICE\n\n‘STUDENT-DRIVER\'S PERMIT\n\nava aa NEY BLO\nsara) tee easement at\nPe « ooawre be a7\n\n{AT RIZAL ST, POBLACION SUR, MAYANTOC,\n\nema mente Ay Cae\nC3ERsazou0 aonajou/or C30\n\"  BIAGK’ WiLL NOT DONATE ANY ORGAN\n\nName: UNEYUANO ADRUANNE FUVERA\n[Adavens POO. SUR. MAYANTOC, TARLAC\net no ones2e3e2a3\n\n','0','completed','2025-08-29 08:49:58');
INSERT INTO `file_pages` VALUES ('14','231','1','Unit I: Introduction to Web Systems \nHistory and Evolution of the Web \n• 1960s: Establishment of ARPANET, the foundation of the internet. \n• 1989: Tim Berners-Lee develops HTML and proposes the World Wide Web. \n• Early 1990s: Development of the first web browsers (like Mosaic) and servers. \n• Late 1990s - Early 2000s: The dot-com boom, rise of e-commerce. \n• 2010s: The mobile revolution and growth of social media. \nInternet Protocols and Web Architecture \n• TCP/IP: Fundamental protocols for communication on the internet. \n• HTTP: Protocol for transferring web pages and other data. \n• DNS: Translates domain names into IP addresses. \n• FTP: Protocol for file transfer. \nWeb Architecture \n• Client-server model: Browsers (clients) request content from servers. \n• Web server software like Apache handles requests and sends responses. \n \nWeb Browsers and Web Servers \nWeb Browsers \n• Applications used to access and display web content (e.g., Google Chrome, Mozilla \nFirefox, Safari). \nWeb Servers \n• Systems that host websites and provide content to clients (users) through the internet. \n \nRoles and Responsibilities of Web Developers \n• Front-end Developers: Focus on the design and layout using HTML, CSS, JavaScript. \n• Back-end Developers: Work on server-side operations using PHP, Python, Ruby, or \nJava. \n• Full-stack Developers: Handle both front-end and back-end development. \n• UI/UX Designers: Create user-friendly and visually appealing interfaces. \n  ','0','completed','2025-08-29 08:51:48');
INSERT INTO `file_pages` VALUES ('15','231','2','Web Development Technologies \n• HTML: Defines the structure and content of web pages. \n• CSS: Styles HTML elements, controlling layout and design. \n• JavaScript: Adds interactivity and dynamic features to web pages. \n• Bootstrap: Framework for building responsive websites with pre-designed components. \n \nHTTP Methods and Status Codes \n• GET: Retrieve data from the server. \n• POST: Send data to the server. \n• PUT: Update existing data. \n• DELETE: Remove data from the server. \nCommon Status Codes \n• 200 OK: Request was successful. \n• 404 Not Found: Requested resource was not found. \n• 500 Internal Server Error: The server encountered an error. \n• 403 Forbidden: The server refuses to authorize the request. \n \nWeb Development Life Cycle (WDLC) \n1. Project Planning and Requirements Gathering \no Define project goals, identify the audience, determine scope and timeline. \n2. Web Design and User Experience \no Create wireframes and mockups, design visual elements, ensure responsiveness. \n3. Web Development Process \no Implement features, test for functionality, optimize performance. \n  ','0','completed','2025-08-29 08:51:48');
INSERT INTO `file_pages` VALUES ('16','232','1','BASIC LINUX COMMANDS \n \n1. pwd - Print Working Directory \n- Description: Displays the current directory \npath. \n \n2. cd - Change Directory \n- Description: Moves to a specified directory. \n- Usage: `cd [directory_name]` \n \n3. ls - List Directory Contents \n- Description: Lists files and directories in the \ncurrent directory. \n     - Options: \n       - `-l`: Long listing format \n       - `-a`: Include hidden files \n       - `-h`: Human-readable file sizes \n \n4. mkdir - Make Directory \n- Description: Creates a new directory. \n- Usage: `mkdir [directory_name]` \n  \n5. rmdir- Remove Directory \n- Description: Deletes an empty directory. \n- Usage: `rmdir [directory_name]` \n  \n6. touch - Create Empty File \n- Description: Creates a new empty file. \n- Usage: `touch [file_name]` \n  \n7. cp- Copy \n- Description: Copies files or directories. \n- Usage: `cp [source] [destination]` \n- Options: \n       - `-r`: Recursive (for directories) \n \n8. mv - Move \n   - Description: Moves or renames files or \ndirectories. \n     - Usage: `mv [source] [destination]` \n  \n9. rm - Remove \n   - Description: Deletes files or directories. \n     - Usage: `rm [file_or_directory]` \n     - Options: \n       - `-r`: Recursive (for directories) \n       - `-f`: Force (no prompt) \n \n10. cat - Concatenate and Display File \n- Description: Displays content of a file or \nconcatenates multiple files. \n- Usage: `cat [file_name]` \n  \n \n \n \n \n  ','0','completed','2025-08-29 09:12:44');
INSERT INTO `file_pages` VALUES ('17','232','2',' \n11. head - Display First Lines of a File \n    - Description: Displays the first few lines of a \nfile. \n      - Usage: `head [file_name]` \n  \n12. tail - Display Last Lines of a File \n    - Description: Displays the last few lines of a \nfile. \n- Usage: `tail [file_name]` \n- Options: \n- `-f`: Follow (updates as file changes) \n \n13. grep - Search Text \n- Description: Searches for a pattern in files. \n- Usage: `grep [pattern] [file_name]` \n- Options: \n        - `-i`: Ignore case \n        - `-r`: Recursive search \n \n14. chmod - Change File Permissions \n- Description: Changes the permissions of a file \nor directory. \n- Usage: `chmod [permissions] \n[file_or_directory]` \n- Example: `chmod +x script.sh` (adds execute \npermission) \n \n \n \n \n15. chown - Change Ownership \n- Description: Changes the owner of a file or \ndirectory. \n- Usage: `chown [new_owner] \n[file_or_directory]` \n  \n16. tar - Tape Archive \n- Description: Creates or extracts tar archives. \n- Usage: `tar -cvf archive.tar [files]` (create) \n- Usage: `tar -xvf archive.tar` (extract) \n17. wget - Download Files from the Web \n- Description: Downloads files from a specified \nURL. \n- Usage: `wget [URL]` \n \n18. man - Manual Pages \n- Description: Displays the manual pages for \ncommands. \n- Usage: `man [command_name]`  ','0','completed','2025-08-29 09:12:44');
INSERT INTO `file_pages` VALUES ('48','246','1','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('49','246','2','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('50','246','3','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('51','246','4','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('52','246','5','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('53','246','6','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('54','246','7','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('55','246','8','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('56','246','9','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('57','246','10','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('58','246','11','wireframe ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('59','246','12','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('60','246','14','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('61','246','15','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('62','246','16','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 11:31:07');
INSERT INTO `file_pages` VALUES ('63','249','1','Reviewer 1: (INTRODUCTION TO SIA) \n \nSystem Overview: \nDefinition:  \nA system is a set of interconnected components working together to achieve a common goal. \nImportance:  \nCrucial for understanding integration and architecture in IT systems. \n \nSystem Characteristics:( I. D. P. O) \n• Interconnected Components: Components depend on each other. \n• Defined Boundaries: Clear separation from the environment. \n• Purpose: Specific goal or objective. \n• Inputs & Outputs: Systems take inputs, process them, and generate outputs. \n \nTypes of Systems:(P. A. O. C) \n• Physical Systems: Hardware, networking infrastructure. \n• Abstract Systems: Software applications, data models. \n• Open Systems: Interacts with external environments (e.g., web services). \n• Closed Systems: Isolated from external influences (e.g., standalone applications). \n \nIT Systems:(C. I. E) \n• Computer Systems: Hardware, software, and networks. \n• Information Systems: Manages and processes data. \n• Embedded Systems: Systems within other devices (e.g., IoT). \n \nTypes of Integration:(V. H. S. C) \n1. Vertical Integration: Connects different levels of IT architecture within an organization. \nExample: Automotive industry (from raw material to retail). \n2. Horizontal Integration: Links systems operating at the same level. \nExample: ERP system integration across different departments. \n3. Star Integration: Uses a central hub to integrate systems. \nExample: CRM as a central hub for multiple systems. \n4. Common Data Format (CDF): Standardizes data exchange between systems. \nExample: Healthcare systems using HL7 standards. \n \nBenefits of System Integration: (E. I. R.) \n• Enhances efficiency. \n• Improves communication and data sharing. \n• Reduces redundancy. \nChallenges:(C. L. S. C. H. M.) \n• Compatibility issues. \n•  Lack of Standardization \n• Security risks. \n• Cultural and Organizational Differences \n• High Costs and Resource Allocation \n•  Maintenance and Scalability Issues  ','0','completed','2025-08-29 12:06:47');
INSERT INTO `file_pages` VALUES ('64','249','2',' \nMultiple Choice: \n \n1. Which of the following best defines a system? \na. A collection of hardware components \nb.  A set of interconnected components working to achieve a goal \nc. A group of isolated processes \nd. An independent unit that functions alone \n2. What is the main purpose of system integration?  \na. To create isolated systems \nb. To improve communication and efficiency between different systems \nc. To decrease the number of components \nd. To increase redundancy in data processing \n3. What type of system interacts with external environments?  \na. Closed system \nb. Abstract system \nc. Open system \nd. Physical system \n4. Which type of integration uses a central hub to connect systems? \na. Vertical integration \nb. Horizontal integration \nc. Star integration \nd. Common Data Format (CDF) integration \n5. Which IT system primarily manages and processes data?  \na. Computer system \nb. Information system \nc. Embedded system \nd. Data network \n \nIdentification: \n1. A system that does not interact with external environments is called a ____________. \n2. The type of system integration that consolidates systems at the same level of IT architecture is called \n____________. \n3. ____________ refers to the communication pathways that connect system components. \n4. The method of standardizing data exchange between systems using universal data formats is called \n____________. \n5. A ____________ system is embedded within other devices and specializes in specific functions. \n \nModified True or False: \n1. True or False: Vertical integration links systems operating at the same level of the IT architecture. \n• If false, modify: Vertical integration links systems at different levels of IT architecture. \n2. True or False: A physical system includes software applications and data models. \n• If false, modify: A physical system includes hardware and networking infrastructure. \n3. True or False: Common Data Format (CDF) integration helps in improving data consistency across systems. \n• If false, modify: CDF integration standardizes data for interoperability and data consistency. \n4. True or False: Embedded systems are designed to manage and process large amounts of data.  ','0','completed','2025-08-29 12:06:47');
INSERT INTO `file_pages` VALUES ('65','249','3','• If false, modify: Embedded systems are specialized systems within devices. \n5. True or False: Open systems are isolated from external influences. \n• If false, modify: Closed systems are isolated from external influences. \n \n \nEnumeration: \n \n1. Enumerate the characteristics of a system (4 items): \n• Interconnected Components \n• Defined Boundaries \n• Purpose (Objective) \n• Inputs and Outputs \n \n2. List the types of IT systems (3 items): \n• Computer Systems \n• Information Systems \n• Embedded Systems \n \n3. Enumerate the challenges in system integration (6 items): \n• Compatibility issues \n• Lack of standardization \n• Security risks \n• Cultural and organizational differences \n• High costs and resource allocation \n• Maintenance and scalability issues \n \n4. List the benefits of system integration (3 items): \n• Enhanced operational efficiency \n• Improved communication and data sharing \n• Reduced redundancy and increased performance \n \n5. Enumerate the components of an IT system (4 items): \n• Hardware \n• Software \n• Data \n• Network \n \n  ','0','completed','2025-08-29 12:06:47');
INSERT INTO `file_pages` VALUES ('66','250','1','Reviewer 1: (INTRODUCTION TO SIA) \n \nSystem Overview: \nDefinition:  \nA system is a set of interconnected components working together to achieve a common goal. \nImportance:  \nCrucial for understanding integration and architecture in IT systems. \n \nSystem Characteristics:( I. D. P. O) \n• Interconnected Components: Components depend on each other. \n• Defined Boundaries: Clear separation from the environment. \n• Purpose: Specific goal or objective. \n• Inputs & Outputs: Systems take inputs, process them, and generate outputs. \n \nTypes of Systems:(P. A. O. C) \n• Physical Systems: Hardware, networking infrastructure. \n• Abstract Systems: Software applications, data models. \n• Open Systems: Interacts with external environments (e.g., web services). \n• Closed Systems: Isolated from external influences (e.g., standalone applications). \n \nIT Systems:(C. I. E) \n• Computer Systems: Hardware, software, and networks. \n• Information Systems: Manages and processes data. \n• Embedded Systems: Systems within other devices (e.g., IoT). \n \nTypes of Integration:(V. H. S. C) \n1. Vertical Integration: Connects different levels of IT architecture within an organization. \nExample: Automotive industry (from raw material to retail). \n2. Horizontal Integration: Links systems operating at the same level. \nExample: ERP system integration across different departments. \n3. Star Integration: Uses a central hub to integrate systems. \nExample: CRM as a central hub for multiple systems. \n4. Common Data Format (CDF): Standardizes data exchange between systems. \nExample: Healthcare systems using HL7 standards. \n \nBenefits of System Integration: (E. I. R.) \n• Enhances efficiency. \n• Improves communication and data sharing. \n• Reduces redundancy. \nChallenges:(C. L. S. C. H. M.) \n• Compatibility issues. \n•  Lack of Standardization \n• Security risks. \n• Cultural and Organizational Differences \n• High Costs and Resource Allocation \n•  Maintenance and Scalability Issues  ','0','completed','2025-08-29 12:08:21');
INSERT INTO `file_pages` VALUES ('67','250','2',' \nMultiple Choice: \n \n1. Which of the following best defines a system? \na. A collection of hardware components \nb.  A set of interconnected components working to achieve a goal \nc. A group of isolated processes \nd. An independent unit that functions alone \n2. What is the main purpose of system integration?  \na. To create isolated systems \nb. To improve communication and efficiency between different systems \nc. To decrease the number of components \nd. To increase redundancy in data processing \n3. What type of system interacts with external environments?  \na. Closed system \nb. Abstract system \nc. Open system \nd. Physical system \n4. Which type of integration uses a central hub to connect systems? \na. Vertical integration \nb. Horizontal integration \nc. Star integration \nd. Common Data Format (CDF) integration \n5. Which IT system primarily manages and processes data?  \na. Computer system \nb. Information system \nc. Embedded system \nd. Data network \n \nIdentification: \n1. A system that does not interact with external environments is called a ____________. \n2. The type of system integration that consolidates systems at the same level of IT architecture is called \n____________. \n3. ____________ refers to the communication pathways that connect system components. \n4. The method of standardizing data exchange between systems using universal data formats is called \n____________. \n5. A ____________ system is embedded within other devices and specializes in specific functions. \n \nModified True or False: \n1. True or False: Vertical integration links systems operating at the same level of the IT architecture. \n• If false, modify: Vertical integration links systems at different levels of IT architecture. \n2. True or False: A physical system includes software applications and data models. \n• If false, modify: A physical system includes hardware and networking infrastructure. \n3. True or False: Common Data Format (CDF) integration helps in improving data consistency across systems. \n• If false, modify: CDF integration standardizes data for interoperability and data consistency. \n4. True or False: Embedded systems are designed to manage and process large amounts of data.  ','0','completed','2025-08-29 12:08:21');
INSERT INTO `file_pages` VALUES ('68','250','3','• If false, modify: Embedded systems are specialized systems within devices. \n5. True or False: Open systems are isolated from external influences. \n• If false, modify: Closed systems are isolated from external influences. \n \n \nEnumeration: \n \n1. Enumerate the characteristics of a system (4 items): \n• Interconnected Components \n• Defined Boundaries \n• Purpose (Objective) \n• Inputs and Outputs \n \n2. List the types of IT systems (3 items): \n• Computer Systems \n• Information Systems \n• Embedded Systems \n \n3. Enumerate the challenges in system integration (6 items): \n• Compatibility issues \n• Lack of standardization \n• Security risks \n• Cultural and organizational differences \n• High costs and resource allocation \n• Maintenance and scalability issues \n \n4. List the benefits of system integration (3 items): \n• Enhanced operational efficiency \n• Improved communication and data sharing \n• Reduced redundancy and increased performance \n \n5. Enumerate the components of an IT system (4 items): \n• Hardware \n• Software \n• Data \n• Network \n \n  ','0','completed','2025-08-29 12:08:21');
INSERT INTO `file_pages` VALUES ('69','251','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('70','251','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('71','251','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('72','251','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('73','251','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('74','251','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('75','251','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('76','251','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('77','251','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('78','251','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('79','251','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('80','251','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('81','251','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('82','251','14','Key components of \na web server ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('83','251','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('84','251','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('85','251','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('86','251','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('87','251','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('88','251','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('89','251','21','Web \nDevelopment ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('90','251','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('91','251','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('92','251','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('93','251','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('94','251','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('95','251','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('96','251','28','UX designer\nuser experience  ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('97','251','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('98','251','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('99','251','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('100','251','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('101','251','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('102','251','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('103','251','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('104','251','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('105','251','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('106','251','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('107','251','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('108','251','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('109','251','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('110','251','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('111','251','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('112','251','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('113','251','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('114','251','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('115','251','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('116','251','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('117','251','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('118','251','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('119','251','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('120','251','52','wireframe ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('121','251','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('122','251','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('123','251','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('124','251','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('125','251','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('126','251','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('127','251','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('128','251','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('129','251','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('130','251','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('131','251','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('132','251','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('133','251','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('134','251','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('135','251','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('136','251','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('137','251','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('138','251','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('139','251','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('140','251','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('141','251','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('142','251','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 12:09:33');
INSERT INTO `file_pages` VALUES ('143','252','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('144','252','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('145','252','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('146','252','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('147','252','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('148','252','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('149','252','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('150','252','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('151','252','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('152','252','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('153','252','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('154','252','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('155','252','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('156','252','14','Key components of \na web server ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('157','252','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('158','252','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('159','252','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('160','252','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('161','252','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('162','252','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('163','252','21','Web \nDevelopment ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('164','252','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('165','252','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('166','252','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('167','252','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('168','252','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('169','252','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('170','252','28','UX designer\nuser experience  ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('171','252','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('172','252','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('173','252','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('174','252','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('175','252','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('176','252','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('177','252','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('178','252','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('179','252','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('180','252','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('181','252','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('182','252','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('183','252','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('184','252','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('185','252','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('186','252','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('187','252','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('188','252','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('189','252','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('190','252','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('191','252','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('192','252','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('193','252','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('194','252','52','wireframe ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('195','252','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('196','252','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('197','252','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('198','252','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('199','252','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('200','252','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('201','252','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('202','252','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('203','252','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('204','252','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('205','252','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('206','252','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('207','252','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('208','252','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('209','252','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('210','252','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('211','252','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('212','252','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('213','252','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('214','252','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('215','252','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('216','252','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 12:59:22');
INSERT INTO `file_pages` VALUES ('217','253','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('218','253','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('219','253','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('220','253','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('221','253','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('222','253','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('223','253','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('224','253','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('225','253','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('226','253','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('227','253','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('228','253','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('229','253','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('230','253','14','Key components of \na web server ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('231','253','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('232','253','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('233','253','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('234','253','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('235','253','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('236','253','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('237','253','21','Web \nDevelopment ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('238','253','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('239','253','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('240','253','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('241','253','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('242','253','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('243','253','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('244','253','28','UX designer\nuser experience  ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('245','253','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('246','253','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('247','253','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('248','253','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('249','253','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('250','253','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('251','253','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('252','253','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('253','253','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('254','253','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('255','253','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('256','253','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('257','253','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('258','253','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('259','253','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('260','253','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('261','253','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('262','253','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('263','253','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('264','253','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('265','253','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('266','253','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('267','253','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('268','253','52','wireframe ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('269','253','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('270','253','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('271','253','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('272','253','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('273','253','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('274','253','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('275','253','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('276','253','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('277','253','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('278','253','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('279','253','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('280','253','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('281','253','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('282','253','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('283','253','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('284','253','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('285','253','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('286','253','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('287','253','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('288','253','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('289','253','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('290','253','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 13:31:16');
INSERT INTO `file_pages` VALUES ('291','254','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('292','254','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('293','254','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('294','254','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('295','254','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('296','254','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('297','254','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('298','254','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('299','254','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('300','254','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('301','254','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('302','254','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('303','254','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('304','254','14','Key components of \na web server ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('305','254','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('306','254','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('307','254','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('308','254','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('309','254','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('310','254','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('311','254','21','Web \nDevelopment ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('312','254','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('313','254','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('314','254','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('315','254','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('316','254','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('317','254','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('318','254','28','UX designer\nuser experience  ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('319','254','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('320','254','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('321','254','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('322','254','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('323','254','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('324','254','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('325','254','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('326','254','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('327','254','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('328','254','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('329','254','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('330','254','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('331','254','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('332','254','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('333','254','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('334','254','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('335','254','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('336','254','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('337','254','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('338','254','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('339','254','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('340','254','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('341','254','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('342','254','52','wireframe ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('343','254','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('344','254','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('345','254','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('346','254','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('347','254','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('348','254','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('349','254','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('350','254','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('351','254','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('352','254','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('353','254','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('354','254','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('355','254','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('356','254','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('357','254','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('358','254','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('359','254','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('360','254','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('361','254','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('362','254','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('363','254','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('364','254','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 13:36:20');
INSERT INTO `file_pages` VALUES ('365','255','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('366','255','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('367','255','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('368','255','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('369','255','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('370','255','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('371','255','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('372','255','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('373','255','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('374','255','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('375','255','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('376','255','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('377','255','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('378','255','14','Key components of \na web server ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('379','255','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('380','255','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('381','255','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('382','255','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('383','255','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('384','255','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('385','255','21','Web \nDevelopment ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('386','255','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('387','255','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('388','255','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('389','255','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('390','255','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('391','255','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('392','255','28','UX designer\nuser experience  ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('393','255','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('394','255','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('395','255','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('396','255','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('397','255','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('398','255','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('399','255','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('400','255','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('401','255','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('402','255','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('403','255','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('404','255','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('405','255','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('406','255','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('407','255','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('408','255','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('409','255','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('410','255','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('411','255','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('412','255','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('413','255','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('414','255','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('415','255','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('416','255','52','wireframe ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('417','255','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('418','255','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('419','255','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('420','255','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('421','255','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('422','255','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('423','255','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('424','255','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('425','255','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('426','255','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('427','255','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('428','255','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('429','255','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('430','255','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('431','255','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('432','255','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('433','255','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('434','255','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('435','255','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('436','255','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('437','255','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('438','255','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 13:49:00');
INSERT INTO `file_pages` VALUES ('439','256','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('440','256','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('441','256','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('442','256','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('443','256','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('444','256','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('445','256','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('446','256','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('447','256','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('448','256','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('449','256','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('450','256','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('451','256','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('452','256','14','Key components of \na web server ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('453','256','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('454','256','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('455','256','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('456','256','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('457','256','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('458','256','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('459','256','21','Web \nDevelopment ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('460','256','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('461','256','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('462','256','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('463','256','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('464','256','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('465','256','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('466','256','28','UX designer\nuser experience  ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('467','256','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('468','256','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('469','256','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('470','256','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('471','256','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('472','256','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('473','256','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('474','256','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('475','256','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('476','256','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('477','256','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('478','256','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('479','256','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('480','256','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('481','256','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('482','256','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('483','256','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('484','256','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('485','256','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('486','256','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('487','256','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('488','256','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('489','256','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('490','256','52','wireframe ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('491','256','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('492','256','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('493','256','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('494','256','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('495','256','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('496','256','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('497','256','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('498','256','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('499','256','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('500','256','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('501','256','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('502','256','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('503','256','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('504','256','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('505','256','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('506','256','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('507','256','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('508','256','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('509','256','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('510','256','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('511','256','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('512','256','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 15:32:14');
INSERT INTO `file_pages` VALUES ('513','257','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('514','257','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('515','257','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('516','257','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('517','257','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('518','257','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('519','257','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('520','257','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('521','257','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('522','257','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('523','257','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('524','257','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('525','257','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('526','257','14','Key components of \na web server ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('527','257','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('528','257','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('529','257','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('530','257','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('531','257','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('532','257','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('533','257','21','Web \nDevelopment ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('534','257','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('535','257','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('536','257','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('537','257','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('538','257','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('539','257','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('540','257','28','UX designer\nuser experience  ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('541','257','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('542','257','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('543','257','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('544','257','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('545','257','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('546','257','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('547','257','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('548','257','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('549','257','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('550','257','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('551','257','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('552','257','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('553','257','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('554','257','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('555','257','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('556','257','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('557','257','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('558','257','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('559','257','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('560','257','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('561','257','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('562','257','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('563','257','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('564','257','52','wireframe ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('565','257','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('566','257','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('567','257','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('568','257','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('569','257','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('570','257','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('571','257','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('572','257','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('573','257','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('574','257','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('575','257','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('576','257','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('577','257','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('578','257','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('579','257','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('580','257','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('581','257','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('582','257','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('583','257','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('584','257','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('585','257','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('586','257','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 16:30:59');
INSERT INTO `file_pages` VALUES ('587','258','1','Unit I\nIntroduction to Web Systems ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('588','258','2','Topic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers  ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('589','258','3','•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('590','258','4','1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('591','258','5','Early\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP). ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('592','258','6','Late 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('593','258','7','Internet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('594','258','8','This is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('595','258','9','A system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('596','258','10','Web architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('597','258','11','Web Browsers and \nWeb Servers ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('598','258','12','Web browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('599','258','13','Web servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('600','258','14','Key components of \na web server ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('601','258','15','Web server software\nThe software that handles \nincoming requests and sends out \nresponses ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('602','258','16','Web content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('603','258','17','Database (optional)\nA database may be used to store \nand retrieve dynamic content. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('604','258','18','Activity\nWeb History Timeline ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('605','258','19','Assign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s). ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('606','258','20','Research\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('607','258','21','Web \nDevelopment ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('608','258','22','Topic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('609','258','23','•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('610','258','24','•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('611','258','25','•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('612','258','26','Full-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('613','258','27','UI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('614','258','28','UX designer\nuser experience  ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('615','258','29','Creates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('616','258','30','•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.  ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('617','258','31','•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('618','258','32','Web development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('619','258','33','•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('620','258','34','Used to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('621','258','35','A programming language that adds \ninteractivity and dynamic features to \nweb pages. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('622','258','36','A popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('623','258','37','Activity\nWebsite/Web \nApplication Critique ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('624','258','38','Instructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('625','258','39','2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience? ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('626','258','40','4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens? ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('627','258','41','Step 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('628','258','42','Introduction to the Web \nDevelopment Life Cycle ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('629','258','43','Topic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('630','258','44','•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('631','258','45','•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('632','258','46','•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('633','258','47','•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('634','258','48','•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('635','258','49','•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('636','258','50','1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('637','258','51','•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('638','258','52','wireframe ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('639','258','53','•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('640','258','55','2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('641','258','56','•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements. ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('642','258','57','•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('643','258','58','COMMON \nMETHODS INCLUDE ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('644','258','59','COMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('645','258','60','GET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('646','258','61','POST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('647','258','62','PUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('648','258','63','DELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('649','258','64','STATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('650','258','65','EXAMPLE STATUS OF CODE ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('651','258','66','200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('652','258','67','404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('653','258','68','400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('654','258','69','401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('655','258','70','403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('656','258','71','500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('657','258','72','503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('658','258','73','302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('659','258','74','301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent ','0','completed','2025-08-29 16:31:30');
INSERT INTO `file_pages` VALUES ('660','258','75','204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update ','0','completed','2025-08-29 16:31:30');

-- Table structure for files

CREATE TABLE `files` (
  `file_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `department_id` int(11) DEFAULT NULL,
  `sub_department_id` int(11) DEFAULT NULL,
  `document_type_id` int(11) DEFAULT NULL,
  `doc_type_fields` longtext DEFAULT NULL CHECK (json_valid(`doc_type_fields`)),
  `file_name` varchar(255) NOT NULL,
  `file_path` varchar(1024) DEFAULT NULL,
  `copy_type` enum('hard_copy','soft_copy') NOT NULL,
  `folder_capacity` int(11) DEFAULT NULL,
  `upload_date` datetime NOT NULL DEFAULT current_timestamp(),
  `date_updated` datetime NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `parent_file_id` int(11) DEFAULT NULL,
  `storage_location_id` int(11) DEFAULT NULL,
  `access_level` enum('personal','sub_department','college') NOT NULL DEFAULT 'personal',
  `qr_path` varchar(512) DEFAULT NULL COMMENT 'Path to static QR code image',
  `file_status` enum('pending_ocr','ocr_failed','completed','ocr_complete','other') DEFAULT 'pending_ocr' COMMENT 'File processing status',
  `file_type` varchar(50) DEFAULT NULL COMMENT 'Type of file (e.g., PDF, DOC)',
  `file_size` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`file_id`),
  UNIQUE KEY `unique_file_path_user` (`file_path`,`user_id`) USING HASH,
  KEY `fk_files_department` (`department_id`),
  KEY `fk_files_sub_department` (`sub_department_id`),
  KEY `fk_files_document_type` (`document_type_id`),
  KEY `fk_files_user` (`user_id`),
  KEY `fk_files_parent` (`parent_file_id`),
  KEY `fk_files_storage_location` (`storage_location_id`),
  KEY `idx_files_parent` (`parent_file_id`),
  KEY `idx_files_upload_date` (`upload_date`),
  KEY `idx_files_doc_type` (`document_type_id`),
  KEY `idx_files_storage_location` (`storage_location_id`),
  KEY `idx_files_access_level` (`access_level`),
  KEY `idx_files_file_status` (`file_status`),
  KEY `idx_files_sub_department` (`sub_department_id`),
  KEY `idx_files_user_id` (`user_id`),
  KEY `idx_files_department_id` (`department_id`),
  KEY `idx_files_sub_department_id` (`sub_department_id`),
  CONSTRAINT `fk_files_department` FOREIGN KEY (`department_id`) REFERENCES `departments` (`department_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_files_document_type` FOREIGN KEY (`document_type_id`) REFERENCES `document_types` (`document_type_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_files_parent` FOREIGN KEY (`parent_file_id`) REFERENCES `files` (`file_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_files_storage_location` FOREIGN KEY (`storage_location_id`) REFERENCES `storage_locations` (`storage_location_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_files_sub_department` FOREIGN KEY (`sub_department_id`) REFERENCES `departments` (`department_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_files_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=260 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for files
INSERT INTO `files` VALUES ('230','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"55676\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','Untitled00.png','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\Untitled00.png','soft_copy',NULL,'2025-08-29 08:43:33','2025-08-29 08:43:33',NULL,'100','personal',NULL,'completed','image/png','233399');
INSERT INTO `files` VALUES ('231','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"856985\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','websystem-OCR-test.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\websystem-OCR-test.pdf','soft_copy',NULL,'2025-08-29 08:50:58','2025-08-29 08:50:58',NULL,'100','personal',NULL,'completed','application/pdf','65351');
INSERT INTO `files` VALUES ('232','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"89865\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','BASIC LINUX COMMANDS.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\BASIC LINUX COMMANDS.pdf','soft_copy',NULL,'2025-08-29 09:11:31','2025-08-29 09:11:31',NULL,'100','personal',NULL,'completed','application/pdf','41145');
INSERT INTO `files` VALUES ('245','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"554565\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','LAST TEST.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\LAST TEST.pdf','soft_copy',NULL,'2025-08-29 11:24:23','2025-08-29 11:24:23',NULL,'100','personal',NULL,'completed','application/pdf','757576');
INSERT INTO `files` VALUES ('246','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"78787878\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','LAST-OCR-TEST.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\LAST-OCR-TEST.pdf','soft_copy',NULL,'2025-08-29 11:28:14','2025-08-29 11:28:14',NULL,'100','personal',NULL,'completed','application/pdf','757576');
INSERT INTO `files` VALUES ('248','28',NULL,NULL,'5','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"invoice_number\\\":\\\"12343\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','OCR-DATA-ETHICS-Presentation - Copy.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\OCR-DATA-ETHICS-Presentation - Copy.pdf','soft_copy',NULL,'2025-08-29 12:03:50','2025-08-29 12:03:50',NULL,'100','personal',NULL,'completed','application/pdf','1503236');
INSERT INTO `files` VALUES ('249','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"12312321\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','REVIEWER-1Introduction-to-SIA (1).pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\REVIEWER-1Introduction-to-SIA (1).pdf','soft_copy',NULL,'2025-08-29 12:06:06','2025-08-29 12:06:06',NULL,'100','personal',NULL,'completed','application/pdf','128742');
INSERT INTO `files` VALUES ('250','28',NULL,NULL,'3','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"diploma_id\\\":\\\"12121212\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','REVIEWER-1Introduction-to-SIA.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\REVIEWER-1Introduction-to-SIA.pdf','soft_copy',NULL,'2025-08-29 12:08:20','2025-08-29 12:08:20',NULL,'100','personal',NULL,'completed','application/pdf','128742');
INSERT INTO `files` VALUES ('251','28',NULL,NULL,'3','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"diploma_id\\\":\\\"777\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','CHECK-TEST.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\CHECK-TEST.pdf','soft_copy',NULL,'2025-08-29 12:09:31','2025-08-29 12:09:31',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('252','28',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"record_id\\\":\\\"12345\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','Re-CHECK-TEST.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\Re-CHECK-TEST.pdf','soft_copy',NULL,'2025-08-29 12:59:20','2025-08-29 12:59:20',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('253','28',NULL,NULL,'3','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"diploma_id\\\":\\\"787\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','Re-CHECK-TEST-again.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\Re-CHECK-TEST-again.pdf','soft_copy',NULL,'2025-08-29 13:31:14','2025-08-29 13:31:14',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('254','28',NULL,NULL,'7','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"meeting_id\\\":\\\"1232\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','Re-CHECK-TEST-again and again.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\Re-CHECK-TEST-again and again.pdf','soft_copy',NULL,'2025-08-29 13:36:18','2025-08-29 13:36:18',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('255','28',NULL,NULL,'5','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"invoice_number\\\":\\\"4343\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','Re-CHECK-TESTER-again and again.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\Re-CHECK-TESTER-again and again.pdf','soft_copy',NULL,'2025-08-29 13:48:59','2025-08-29 13:48:59',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('256','28',NULL,NULL,'3','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"diploma_id\\\":\\\"8787\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','HHH.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\HHH.pdf','soft_copy',NULL,'2025-08-29 15:32:13','2025-08-29 15:32:13',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('257','28',NULL,NULL,'3','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"diploma_id\\\":\\\"2132\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','RETEST.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\RETEST.pdf','soft_copy',NULL,'2025-08-29 16:30:58','2025-08-29 16:30:58',NULL,NULL,'personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('258','28',NULL,NULL,'3','{\"dynamic_fields\":{\"doc_type_fields\":\"{\\\"diploma_id\\\":\\\"123456\\\",\\\"date_released\\\":\\\"2025-08-29\\\",\\\"date_received\\\":\\\"2025-08-29\\\"}\"}}','RETEST-9898.pdf','C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\User_1\\RETEST-9898.pdf','soft_copy',NULL,'2025-08-29 16:31:28','2025-08-29 16:31:28',NULL,'100','personal',NULL,'completed','application/pdf','2710569');
INSERT INTO `files` VALUES ('259','14',NULL,NULL,'1','{\"dynamic_fields\":{\"doc_type_fields\":\"{}\"}}','ACC.txt','C:\\xampp\\htdocs\\GitHub.com\\Arc_Hive-main\\uploads\\Uploads\\College of Education\\Technology and Livelihood Education\\Sgt Caleb Steven A Lagunilla PA (Res)\\User_1\\ACC.txt','soft_copy',NULL,'2025-09-03 02:23:07','2025-09-03 02:23:07',NULL,'100','personal',NULL,'completed','text/plain','1512');

-- Table structure for schema_change_log

CREATE TABLE `schema_change_log` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `change_description` varchar(255) NOT NULL,
  `change_time` datetime DEFAULT current_timestamp(),
  `executed_by` varchar(100) DEFAULT 'root@localhost',
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for schema_change_log
INSERT INTO `schema_change_log` VALUES ('1','Starting schema update for personal folders and department paths','2025-08-27 05:26:27','root@localhost');
INSERT INTO `schema_change_log` VALUES ('2','Added 0 personal folders to storage_locations','2025-08-27 05:26:27','root@localhost');
INSERT INTO `schema_change_log` VALUES ('3','Standardized folder_path for 0 departments','2025-08-27 05:26:27','root@localhost');
INSERT INTO `schema_change_log` VALUES ('4','Added unique_folder_path constraint to departments','2025-08-27 05:26:27','root@localhost');
INSERT INTO `schema_change_log` VALUES ('5','Created index idx_storage_locations_full_path on storage_locations','2025-08-27 05:26:28','root@localhost');
INSERT INTO `schema_change_log` VALUES ('6','Created index idx_departments_folder_path on departments','2025-08-27 05:26:28','root@localhost');
INSERT INTO `schema_change_log` VALUES ('7','Skipped index idx_files_user_id: already exists','2025-08-27 05:26:28','root@localhost');
INSERT INTO `schema_change_log` VALUES ('8','Created index idx_files_department_id on files','2025-08-27 05:26:28','root@localhost');
INSERT INTO `schema_change_log` VALUES ('9','Created index idx_files_sub_department_id on files','2025-08-27 05:26:28','root@localhost');
INSERT INTO `schema_change_log` VALUES ('10','Completed schema update for personal folders and get_file_path function','2025-08-27 05:26:28','root@localhost');
INSERT INTO `schema_change_log` VALUES ('11','Modified database schema for OCR processing','2025-08-29 08:22:46','root@localhost');

-- Table structure for storage_locations

CREATE TABLE `storage_locations` (
  `storage_location_id` int(11) NOT NULL AUTO_INCREMENT,
  `department_id` int(11) DEFAULT NULL,
  `sub_department_id` int(11) DEFAULT NULL,
  `parent_storage_location_id` int(11) DEFAULT NULL,
  `unit_name` varchar(100) NOT NULL,
  `unit_type` enum('room','cabinet','layer','box','folder') NOT NULL,
  `folder_capacity` int(11) NOT NULL,
  `full_path` varchar(512) NOT NULL,
  PRIMARY KEY (`storage_location_id`),
  UNIQUE KEY `uk_storage_locations_full_path` (`full_path`),
  KEY `fk_storage_locations_department` (`department_id`),
  KEY `fk_storage_locations_sub_department` (`sub_department_id`),
  KEY `fk_storage_locations_parent` (`parent_storage_location_id`),
  KEY `idx_storage_locations_parent` (`parent_storage_location_id`),
  KEY `idx_storage_locations_dept` (`department_id`,`sub_department_id`),
  KEY `idx_storage_locations_full_path` (`full_path`),
  CONSTRAINT `fk_storage_locations_department` FOREIGN KEY (`department_id`) REFERENCES `departments` (`department_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_storage_locations_parent` FOREIGN KEY (`parent_storage_location_id`) REFERENCES `storage_locations` (`storage_location_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_storage_locations_sub_department` FOREIGN KEY (`sub_department_id`) REFERENCES `departments` (`department_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=120 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for storage_locations
INSERT INTO `storage_locations` VALUES ('1','16',NULL,NULL,'Room 101','room','100','Room 101');
INSERT INTO `storage_locations` VALUES ('2','16',NULL,'1','Cabinet A','cabinet','50','Room 101/Cabinet A');
INSERT INTO `storage_locations` VALUES ('3','16',NULL,'2','Layer 1','layer','20','Room 101/Cabinet A/Layer 1');
INSERT INTO `storage_locations` VALUES ('4','3','16',NULL,'Lab 1','room','200','Lab 1');
INSERT INTO `storage_locations` VALUES ('5','3','16','4','Cabinet A','cabinet','100','Lab 1/Cabinet A');
INSERT INTO `storage_locations` VALUES ('6','3','16','5','Layer 1','layer','50','Lab 1/Cabinet A/Layer 1');
INSERT INTO `storage_locations` VALUES ('7','3','16','6','Box 1','box','25','Lab 1/Cabinet A/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('8','3','16','7','Folder 1','folder','10','Lab 1/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('9','3','16','7','Folder 2','folder','10','Lab 1/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('10','3','16','6','Box 2','box','25','Lab 1/Cabinet A/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('11','3','16','10','Folder 1','folder','10','Lab 1/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('12','3','16','10','Folder 2','folder','10','Lab 1/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('13','3','16','5','Layer 2','layer','50','Lab 1/Cabinet A/Layer 2');
INSERT INTO `storage_locations` VALUES ('14','3','16','13','Box 1','box','25','Lab 1/Cabinet A/Layer 2/Box 1');
INSERT INTO `storage_locations` VALUES ('15','3','16','14','Folder 1','folder','10','Lab 1/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('16','3','16','14','Folder 2','folder','10','Lab 1/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('17','3','16','13','Box 2','box','25','Lab 1/Cabinet A/Layer 2/Box 2');
INSERT INTO `storage_locations` VALUES ('18','3','16','17','Folder 1','folder','10','Lab 1/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('19','3','16','17','Folder 2','folder','10','Lab 1/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('20','3','16','4','Cabinet B','cabinet','100','Lab 1/Cabinet B');
INSERT INTO `storage_locations` VALUES ('21','3','16','20','Layer 1','layer','50','Lab 1/Cabinet B/Layer 1');
INSERT INTO `storage_locations` VALUES ('22','3','16','21','Box 1','box','25','Lab 1/Cabinet B/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('23','3','16','22','Folder 1','folder','10','Lab 1/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('24','3','16','22','Folder 2','folder','10','Lab 1/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('25','3','16','21','Box 2','box','25','Lab 1/Cabinet B/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('26','3','16','25','Folder 1','folder','10','Lab 1/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('27','3','16','25','Folder 2','folder','10','Lab 1/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('28','3','16',NULL,'Lab 2','room','200','Lab 2');
INSERT INTO `storage_locations` VALUES ('29','3','16','28','Cabinet A','cabinet','100','Lab 2/Cabinet A');
INSERT INTO `storage_locations` VALUES ('30','3','16','29','Layer 1','layer','50','Lab 2/Cabinet A/Layer 1');
INSERT INTO `storage_locations` VALUES ('31','3','16','30','Box 1','box','25','Lab 2/Cabinet A/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('32','3','16','31','Folder 1','folder','10','Lab 2/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('33','3','16','31','Folder 2','folder','10','Lab 2/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('34','3','16','30','Box 2','box','25','Lab 2/Cabinet A/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('35','3','16','34','Folder 1','folder','10','Lab 2/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('36','3','16','34','Folder 2','folder','10','Lab 2/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('37','3','16','29','Layer 2','layer','50','Lab 2/Cabinet A/Layer 2');
INSERT INTO `storage_locations` VALUES ('38','3','16','37','Box 1','box','25','Lab 2/Cabinet A/Layer 2/Box 1');
INSERT INTO `storage_locations` VALUES ('39','3','16','38','Folder 1','folder','10','Lab 2/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('40','3','16','38','Folder 2','folder','10','Lab 2/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('41','3','16','37','Box 2','box','25','Lab 2/Cabinet A/Layer 2/Box 2');
INSERT INTO `storage_locations` VALUES ('42','3','16','41','Folder 1','folder','10','Lab 2/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('43','3','16','41','Folder 2','folder','10','Lab 2/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('44','3','16','28','Cabinet B','cabinet','100','Lab 2/Cabinet B');
INSERT INTO `storage_locations` VALUES ('45','3','16','44','Layer 1','layer','50','Lab 2/Cabinet B/Layer 1');
INSERT INTO `storage_locations` VALUES ('46','3','16','45','Box 1','box','25','Lab 2/Cabinet B/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('47','3','16','46','Folder 1','folder','10','Lab 2/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('48','3','16','46','Folder 2','folder','10','Lab 2/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('49','3','16','45','Box 2','box','25','Lab 2/Cabinet B/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('50','3','16','49','Folder 1','folder','10','Lab 2/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('51','3','16','49','Folder 2','folder','10','Lab 2/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('52','3','16',NULL,'Lab 3','room','200','Lab 3');
INSERT INTO `storage_locations` VALUES ('53','3','16','52','Cabinet A','cabinet','100','Lab 3/Cabinet A');
INSERT INTO `storage_locations` VALUES ('54','3','16','53','Layer 1','layer','50','Lab 3/Cabinet A/Layer 1');
INSERT INTO `storage_locations` VALUES ('55','3','16','54','Box 1','box','25','Lab 3/Cabinet A/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('56','3','16','55','Folder 1','folder','10','Lab 3/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('57','3','16','55','Folder 2','folder','10','Lab 3/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('58','3','16','54','Box 2','box','25','Lab 3/Cabinet A/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('59','3','16','58','Folder 1','folder','10','Lab 3/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('60','3','16','58','Folder 2','folder','10','Lab 3/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('61','3','16','53','Layer 2','layer','50','Lab 3/Cabinet A/Layer 2');
INSERT INTO `storage_locations` VALUES ('62','3','16','61','Box 1','box','25','Lab 3/Cabinet A/Layer 2/Box 1');
INSERT INTO `storage_locations` VALUES ('63','3','16','62','Folder 1','folder','10','Lab 3/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('64','3','16','62','Folder 2','folder','10','Lab 3/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('65','3','16','61','Box 2','box','25','Lab 3/Cabinet A/Layer 2/Box 2');
INSERT INTO `storage_locations` VALUES ('66','3','16','65','Folder 1','folder','10','Lab 3/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('67','3','16','65','Folder 2','folder','10','Lab 3/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('68','3','16','52','Cabinet B','cabinet','100','Lab 3/Cabinet B');
INSERT INTO `storage_locations` VALUES ('69','3','16','68','Layer 1','layer','50','Lab 3/Cabinet B/Layer 1');
INSERT INTO `storage_locations` VALUES ('70','3','16','69','Box 1','box','25','Lab 3/Cabinet B/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('71','3','16','70','Folder 1','folder','10','Lab 3/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('72','3','16','70','Folder 2','folder','10','Lab 3/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('73','3','16','69','Box 2','box','25','Lab 3/Cabinet B/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('74','3','16','73','Folder 1','folder','10','Lab 3/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('75','3','16','73','Folder 2','folder','10','Lab 3/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('76','3','16',NULL,'Lab 4','room','200','Lab 4');
INSERT INTO `storage_locations` VALUES ('77','3','16','76','Cabinet A','cabinet','100','Lab 4/Cabinet A');
INSERT INTO `storage_locations` VALUES ('78','3','16','77','Layer 1','layer','50','Lab 4/Cabinet A/Layer 1');
INSERT INTO `storage_locations` VALUES ('79','3','16','78','Box 1','box','25','Lab 4/Cabinet A/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('80','3','16','79','Folder 1','folder','10','Lab 4/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('81','3','16','79','Folder 2','folder','10','Lab 4/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('82','3','16','78','Box 2','box','25','Lab 4/Cabinet A/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('83','3','16','82','Folder 1','folder','10','Lab 4/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('84','3','16','82','Folder 2','folder','10','Lab 4/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('85','3','16','77','Layer 2','layer','50','Lab 4/Cabinet A/Layer 2');
INSERT INTO `storage_locations` VALUES ('86','3','16','85','Box 1','box','25','Lab 4/Cabinet A/Layer 2/Box 1');
INSERT INTO `storage_locations` VALUES ('87','3','16','86','Folder 1','folder','10','Lab 4/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('88','3','16','86','Folder 2','folder','10','Lab 4/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('89','3','16','85','Box 2','box','25','Lab 4/Cabinet A/Layer 2/Box 2');
INSERT INTO `storage_locations` VALUES ('90','3','16','89','Folder 1','folder','10','Lab 4/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('91','3','16','89','Folder 2','folder','10','Lab 4/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('92','3','16','76','Cabinet B','cabinet','100','Lab 4/Cabinet B');
INSERT INTO `storage_locations` VALUES ('93','3','16','92','Layer 1','layer','50','Lab 4/Cabinet B/Layer 1');
INSERT INTO `storage_locations` VALUES ('94','3','16','93','Box 1','box','25','Lab 4/Cabinet B/Layer 1/Box 1');
INSERT INTO `storage_locations` VALUES ('95','3','16','94','Folder 1','folder','10','Lab 4/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `storage_locations` VALUES ('96','3','16','94','Folder 2','folder','10','Lab 4/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `storage_locations` VALUES ('97','3','16','93','Box 2','box','25','Lab 4/Cabinet B/Layer 1/Box 2');
INSERT INTO `storage_locations` VALUES ('98','3','16','97','Folder 1','folder','10','Lab 4/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `storage_locations` VALUES ('99','3','16','97','Folder 2','folder','10','Lab 4/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `storage_locations` VALUES ('100',NULL,NULL,NULL,'User_1','folder','1000','User_1');
INSERT INTO `storage_locations` VALUES ('101',NULL,NULL,NULL,'User_12','folder','1000','User_12');
INSERT INTO `storage_locations` VALUES ('102',NULL,NULL,NULL,'User_14','folder','1000','User_14');
INSERT INTO `storage_locations` VALUES ('103',NULL,NULL,NULL,'User_15','folder','1000','User_15');
INSERT INTO `storage_locations` VALUES ('104',NULL,NULL,NULL,'User_20','folder','1000','User_20');
INSERT INTO `storage_locations` VALUES ('105',NULL,NULL,NULL,'User_23','folder','1000','User_23');
INSERT INTO `storage_locations` VALUES ('106',NULL,NULL,NULL,'User_25','folder','1000','User_25');
INSERT INTO `storage_locations` VALUES ('107',NULL,NULL,NULL,'User_27','folder','1000','User_27');
INSERT INTO `storage_locations` VALUES ('108',NULL,NULL,NULL,'User_28','folder','1000','User_28');
INSERT INTO `storage_locations` VALUES ('109',NULL,NULL,NULL,'User_10','folder','1000','User_10');
INSERT INTO `storage_locations` VALUES ('110',NULL,NULL,NULL,'User_13','folder','1000','User_13');
INSERT INTO `storage_locations` VALUES ('111',NULL,NULL,NULL,'User_21','folder','1000','User_21');
INSERT INTO `storage_locations` VALUES ('112',NULL,NULL,NULL,'User_22','folder','1000','User_22');
INSERT INTO `storage_locations` VALUES ('113',NULL,NULL,NULL,'User_24','folder','1000','User_24');
INSERT INTO `storage_locations` VALUES ('115','3',NULL,NULL,'R001','room','0','R001');
INSERT INTO `storage_locations` VALUES ('116','3',NULL,'115','C001','cabinet','0','R001/C001');
INSERT INTO `storage_locations` VALUES ('117','3',NULL,'116','L001','layer','0','R001/C001/L001');
INSERT INTO `storage_locations` VALUES ('118','3',NULL,'117','B001','box','0','R001/C001/L001/B001');
INSERT INTO `storage_locations` VALUES ('119','3',NULL,'118','F001','folder','100','R001/C001/L001/B001/F001');

-- Table structure for text_repository

CREATE TABLE `text_repository` (
  `content_id` int(11) NOT NULL AUTO_INCREMENT,
  `file_id` int(11) NOT NULL,
  `extracted_text` longtext DEFAULT NULL,
  `page_texts` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'JSON array of text per page',
  `page_count` int(11) DEFAULT 0,
  `ocr_attempts` int(11) DEFAULT 0,
  `ocr_status` enum('pending','processing','completed','failed') DEFAULT 'pending',
  `error_message` text DEFAULT NULL,
  `ocr_engine` varchar(50) DEFAULT 'tesseract',
  `extraction_date` datetime DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `last_processed` datetime DEFAULT NULL,
  PRIMARY KEY (`content_id`),
  KEY `fk_text_repository_file` (`file_id`),
  KEY `idx_text_repository_ocr_attempts` (`ocr_attempts`),
  KEY `idx_text_repository_file_ocr` (`file_id`,`ocr_attempts`),
  KEY `idx_ocr_status` (`ocr_status`),
  KEY `idx_ocr_attempts` (`ocr_attempts`),
  FULLTEXT KEY `ft_text_repository_extracted_text` (`extracted_text`),
  FULLTEXT KEY `extracted_text` (`extracted_text`),
  CONSTRAINT `fk_text_repository_file` FOREIGN KEY (`file_id`) REFERENCES `files` (`file_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Data for text_repository
INSERT INTO `text_repository` VALUES ('35','230','REPUBLIC OF THE PHILIPPINES\n\nDEPARTMENT OF TRANSPORTATION\nLAND TRANSPORTATION OFFICE\n\n‘STUDENT-DRIVER\'S PERMIT\n\nava aa NEY BLO\nsara) tee easement at\nPe « ooawre be a7\n\n{AT RIZAL ST, POBLACION SUR, MAYANTOC,\n\nema mente Ay Cae\nC3ERsazou0 aonajou/or C30\n\"  BIAGK’ WiLL NOT DONATE ANY ORGAN\n\nName: UNEYUANO ADRUANNE FUVERA\n[Adavens POO. SUR. MAYANTOC, TARLAC\net no ones2e3e2a3\n\n',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 08:49:58','2025-08-29 08:49:58');
INSERT INTO `text_repository` VALUES ('37','230','REPUBLIC OF THE PHILIPPINES\n\nDEPARTMENT OF TRANSPORTATION\nLAND TRANSPORTATION OFFICE\n\n‘STUDENT-DRIVER\'S PERMIT\n\nava aa NEY BLO\nsara) tee easement at\nPe « ooawre be a7\n\n{AT RIZAL ST, POBLACION SUR, MAYANTOC,\n\nema mente Ay Cae\nC3ERsazou0 aonajou/or C30\n\"  BIAGK’ WiLL NOT DONATE ANY ORGAN\n\nName: UNEYUANO ADRUANNE FUVERA\n[Adavens POO. SUR. MAYANTOC, TARLAC\net no ones2e3e2a3\n\n',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 08:49:58','2025-08-29 08:49:58');
INSERT INTO `text_repository` VALUES ('38','231','Unit I: Introduction to Web Systems \nHistory and Evolution of the Web \n• 1960s: Establishment of ARPANET, the foundation of the internet. \n• 1989: Tim Berners-Lee develops HTML and proposes the World Wide Web. \n• Early 1990s: Development of the first web browsers (like Mosaic) and servers. \n• Late 1990s - Early 2000s: The dot-com boom, rise of e-commerce. \n• 2010s: The mobile revolution and growth of social media. \nInternet Protocols and Web Architecture \n• TCP/IP: Fundamental protocols for communication on the internet. \n• HTTP: Protocol for transferring web pages and other data. \n• DNS: Translates domain names into IP addresses. \n• FTP: Protocol for file transfer. \nWeb Architecture \n• Client-server model: Browsers (clients) request content from servers. \n• Web server software like Apache handles requests and sends responses. \n \nWeb Browsers and Web Servers \nWeb Browsers \n• Applications used to access and display web content (e.g., Google Chrome, Mozilla \nFirefox, Safari). \nWeb Servers \n• Systems that host websites and provide content to clients (users) through the internet. \n \nRoles and Responsibilities of Web Developers \n• Front-end Developers: Focus on the design and layout using HTML, CSS, JavaScript. \n• Back-end Developers: Work on server-side operations using PHP, Python, Ruby, or \nJava. \n• Full-stack Developers: Handle both front-end and back-end development. \n• UI/UX Designers: Create user-friendly and visually appealing interfaces.\n\nWeb Development Technologies \n• HTML: Defines the structure and content of web pages. \n• CSS: Styles HTML elements, controlling layout and design. \n• JavaScript: Adds interactivity and dynamic features to web pages. \n• Bootstrap: Framework for building responsive websites with pre-designed components. \n \nHTTP Methods and Status Codes \n• GET: Retrieve data from the server. \n• POST: Send data to the server. \n• PUT: Update existing data. \n• DELETE: Remove data from the server. \nCommon Status Codes \n• 200 OK: Request was successful. \n• 404 Not Found: Requested resource was not found. \n• 500 Internal Server Error: The server encountered an error. \n• 403 Forbidden: The server refuses to authorize the request. \n \nWeb Development Life Cycle (WDLC) \n1. Project Planning and Requirements Gathering \no Define project goals, identify the audience, determine scope and timeline. \n2. Web Design and User Experience \no Create wireframes and mockups, design visual elements, ensure responsiveness. \n3. Web Development Process \no Implement features, test for functionality, optimize performance.',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 08:51:48','2025-08-29 08:51:48');
INSERT INTO `text_repository` VALUES ('39','231','Unit I: Introduction to Web Systems \nHistory and Evolution of the Web \n• 1960s: Establishment of ARPANET, the foundation of the internet. \n• 1989: Tim Berners-Lee develops HTML and proposes the World Wide Web. \n• Early 1990s: Development of the first web browsers (like Mosaic) and servers. \n• Late 1990s - Early 2000s: The dot-com boom, rise of e-commerce. \n• 2010s: The mobile revolution and growth of social media. \nInternet Protocols and Web Architecture \n• TCP/IP: Fundamental protocols for communication on the internet. \n• HTTP: Protocol for transferring web pages and other data. \n• DNS: Translates domain names into IP addresses. \n• FTP: Protocol for file transfer. \nWeb Architecture \n• Client-server model: Browsers (clients) request content from servers. \n• Web server software like Apache handles requests and sends responses. \n \nWeb Browsers and Web Servers \nWeb Browsers \n• Applications used to access and display web content (e.g., Google Chrome, Mozilla \nFirefox, Safari). \nWeb Servers \n• Systems that host websites and provide content to clients (users) through the internet. \n \nRoles and Responsibilities of Web Developers \n• Front-end Developers: Focus on the design and layout using HTML, CSS, JavaScript. \n• Back-end Developers: Work on server-side operations using PHP, Python, Ruby, or \nJava. \n• Full-stack Developers: Handle both front-end and back-end development. \n• UI/UX Designers: Create user-friendly and visually appealing interfaces.\n\nWeb Development Technologies \n• HTML: Defines the structure and content of web pages. \n• CSS: Styles HTML elements, controlling layout and design. \n• JavaScript: Adds interactivity and dynamic features to web pages. \n• Bootstrap: Framework for building responsive websites with pre-designed components. \n \nHTTP Methods and Status Codes \n• GET: Retrieve data from the server. \n• POST: Send data to the server. \n• PUT: Update existing data. \n• DELETE: Remove data from the server. \nCommon Status Codes \n• 200 OK: Request was successful. \n• 404 Not Found: Requested resource was not found. \n• 500 Internal Server Error: The server encountered an error. \n• 403 Forbidden: The server refuses to authorize the request. \n \nWeb Development Life Cycle (WDLC) \n1. Project Planning and Requirements Gathering \no Define project goals, identify the audience, determine scope and timeline. \n2. Web Design and User Experience \no Create wireframes and mockups, design visual elements, ensure responsiveness. \n3. Web Development Process \no Implement features, test for functionality, optimize performance.',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 08:51:48','2025-08-29 08:51:48');
INSERT INTO `text_repository` VALUES ('40','232','BASIC LINUX COMMANDS \n \n1. pwd - Print Working Directory \n- Description: Displays the current directory \npath. \n \n2. cd - Change Directory \n- Description: Moves to a specified directory. \n- Usage: `cd [directory_name]` \n \n3. ls - List Directory Contents \n- Description: Lists files and directories in the \ncurrent directory. \n     - Options: \n       - `-l`: Long listing format \n       - `-a`: Include hidden files \n       - `-h`: Human-readable file sizes \n \n4. mkdir - Make Directory \n- Description: Creates a new directory. \n- Usage: `mkdir [directory_name]` \n  \n5. rmdir- Remove Directory \n- Description: Deletes an empty directory. \n- Usage: `rmdir [directory_name]` \n  \n6. touch - Create Empty File \n- Description: Creates a new empty file. \n- Usage: `touch [file_name]` \n  \n7. cp- Copy \n- Description: Copies files or directories. \n- Usage: `cp [source] [destination]` \n- Options: \n       - `-r`: Recursive (for directories) \n \n8. mv - Move \n   - Description: Moves or renames files or \ndirectories. \n     - Usage: `mv [source] [destination]` \n  \n9. rm - Remove \n   - Description: Deletes files or directories. \n     - Usage: `rm [file_or_directory]` \n     - Options: \n       - `-r`: Recursive (for directories) \n       - `-f`: Force (no prompt) \n \n10. cat - Concatenate and Display File \n- Description: Displays content of a file or \nconcatenates multiple files. \n- Usage: `cat [file_name]`\n\n11. head - Display First Lines of a File \n    - Description: Displays the first few lines of a \nfile. \n      - Usage: `head [file_name]` \n  \n12. tail - Display Last Lines of a File \n    - Description: Displays the last few lines of a \nfile. \n- Usage: `tail [file_name]` \n- Options: \n- `-f`: Follow (updates as file changes) \n \n13. grep - Search Text \n- Description: Searches for a pattern in files. \n- Usage: `grep [pattern] [file_name]` \n- Options: \n        - `-i`: Ignore case \n        - `-r`: Recursive search \n \n14. chmod - Change File Permissions \n- Description: Changes the permissions of a file \nor directory. \n- Usage: `chmod [permissions] \n[file_or_directory]` \n- Example: `chmod +x script.sh` (adds execute \npermission) \n \n \n \n \n15. chown - Change Ownership \n- Description: Changes the owner of a file or \ndirectory. \n- Usage: `chown [new_owner] \n[file_or_directory]` \n  \n16. tar - Tape Archive \n- Description: Creates or extracts tar archives. \n- Usage: `tar -cvf archive.tar [files]` (create) \n- Usage: `tar -xvf archive.tar` (extract) \n17. wget - Download Files from the Web \n- Description: Downloads files from a specified \nURL. \n- Usage: `wget [URL]` \n \n18. man - Manual Pages \n- Description: Displays the manual pages for \ncommands. \n- Usage: `man [command_name]`',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 09:12:44','2025-08-29 09:12:44');
INSERT INTO `text_repository` VALUES ('41','232','BASIC LINUX COMMANDS \n \n1. pwd - Print Working Directory \n- Description: Displays the current directory \npath. \n \n2. cd - Change Directory \n- Description: Moves to a specified directory. \n- Usage: `cd [directory_name]` \n \n3. ls - List Directory Contents \n- Description: Lists files and directories in the \ncurrent directory. \n     - Options: \n       - `-l`: Long listing format \n       - `-a`: Include hidden files \n       - `-h`: Human-readable file sizes \n \n4. mkdir - Make Directory \n- Description: Creates a new directory. \n- Usage: `mkdir [directory_name]` \n  \n5. rmdir- Remove Directory \n- Description: Deletes an empty directory. \n- Usage: `rmdir [directory_name]` \n  \n6. touch - Create Empty File \n- Description: Creates a new empty file. \n- Usage: `touch [file_name]` \n  \n7. cp- Copy \n- Description: Copies files or directories. \n- Usage: `cp [source] [destination]` \n- Options: \n       - `-r`: Recursive (for directories) \n \n8. mv - Move \n   - Description: Moves or renames files or \ndirectories. \n     - Usage: `mv [source] [destination]` \n  \n9. rm - Remove \n   - Description: Deletes files or directories. \n     - Usage: `rm [file_or_directory]` \n     - Options: \n       - `-r`: Recursive (for directories) \n       - `-f`: Force (no prompt) \n \n10. cat - Concatenate and Display File \n- Description: Displays content of a file or \nconcatenates multiple files. \n- Usage: `cat [file_name]`\n\n11. head - Display First Lines of a File \n    - Description: Displays the first few lines of a \nfile. \n      - Usage: `head [file_name]` \n  \n12. tail - Display Last Lines of a File \n    - Description: Displays the last few lines of a \nfile. \n- Usage: `tail [file_name]` \n- Options: \n- `-f`: Follow (updates as file changes) \n \n13. grep - Search Text \n- Description: Searches for a pattern in files. \n- Usage: `grep [pattern] [file_name]` \n- Options: \n        - `-i`: Ignore case \n        - `-r`: Recursive search \n \n14. chmod - Change File Permissions \n- Description: Changes the permissions of a file \nor directory. \n- Usage: `chmod [permissions] \n[file_or_directory]` \n- Example: `chmod +x script.sh` (adds execute \npermission) \n \n \n \n \n15. chown - Change Ownership \n- Description: Changes the owner of a file or \ndirectory. \n- Usage: `chown [new_owner] \n[file_or_directory]` \n  \n16. tar - Tape Archive \n- Description: Creates or extracts tar archives. \n- Usage: `tar -cvf archive.tar [files]` (create) \n- Usage: `tar -xvf archive.tar` (extract) \n17. wget - Download Files from the Web \n- Description: Downloads files from a specified \nURL. \n- Usage: `wget [URL]` \n \n18. man - Manual Pages \n- Description: Displays the manual pages for \ncommands. \n- Usage: `man [command_name]`',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 09:12:44','2025-08-29 09:12:44');
INSERT INTO `text_repository` VALUES ('56','245','',NULL,'0','0','pending',NULL,'tesseract','2025-08-29 11:24:23',NULL);
INSERT INTO `text_repository` VALUES ('57','246','Introduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 11:31:07','2025-08-29 11:31:07');
INSERT INTO `text_repository` VALUES ('58','246','Introduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 11:31:07','2025-08-29 11:31:07');
INSERT INTO `text_repository` VALUES ('60','248','',NULL,'0','0','pending',NULL,'tesseract','2025-08-29 12:03:50',NULL);
INSERT INTO `text_repository` VALUES ('61','249','Reviewer 1: (INTRODUCTION TO SIA) \n \nSystem Overview: \nDefinition:  \nA system is a set of interconnected components working together to achieve a common goal. \nImportance:  \nCrucial for understanding integration and architecture in IT systems. \n \nSystem Characteristics:( I. D. P. O) \n• Interconnected Components: Components depend on each other. \n• Defined Boundaries: Clear separation from the environment. \n• Purpose: Specific goal or objective. \n• Inputs & Outputs: Systems take inputs, process them, and generate outputs. \n \nTypes of Systems:(P. A. O. C) \n• Physical Systems: Hardware, networking infrastructure. \n• Abstract Systems: Software applications, data models. \n• Open Systems: Interacts with external environments (e.g., web services). \n• Closed Systems: Isolated from external influences (e.g., standalone applications). \n \nIT Systems:(C. I. E) \n• Computer Systems: Hardware, software, and networks. \n• Information Systems: Manages and processes data. \n• Embedded Systems: Systems within other devices (e.g., IoT). \n \nTypes of Integration:(V. H. S. C) \n1. Vertical Integration: Connects different levels of IT architecture within an organization. \nExample: Automotive industry (from raw material to retail). \n2. Horizontal Integration: Links systems operating at the same level. \nExample: ERP system integration across different departments. \n3. Star Integration: Uses a central hub to integrate systems. \nExample: CRM as a central hub for multiple systems. \n4. Common Data Format (CDF): Standardizes data exchange between systems. \nExample: Healthcare systems using HL7 standards. \n \nBenefits of System Integration: (E. I. R.) \n• Enhances efficiency. \n• Improves communication and data sharing. \n• Reduces redundancy. \nChallenges:(C. L. S. C. H. M.) \n• Compatibility issues. \n•  Lack of Standardization \n• Security risks. \n• Cultural and Organizational Differences \n• High Costs and Resource Allocation \n•  Maintenance and Scalability Issues\n\nMultiple Choice: \n \n1. Which of the following best defines a system? \na. A collection of hardware components \nb.  A set of interconnected components working to achieve a goal \nc. A group of isolated processes \nd. An independent unit that functions alone \n2. What is the main purpose of system integration?  \na. To create isolated systems \nb. To improve communication and efficiency between different systems \nc. To decrease the number of components \nd. To increase redundancy in data processing \n3. What type of system interacts with external environments?  \na. Closed system \nb. Abstract system \nc. Open system \nd. Physical system \n4. Which type of integration uses a central hub to connect systems? \na. Vertical integration \nb. Horizontal integration \nc. Star integration \nd. Common Data Format (CDF) integration \n5. Which IT system primarily manages and processes data?  \na. Computer system \nb. Information system \nc. Embedded system \nd. Data network \n \nIdentification: \n1. A system that does not interact with external environments is called a ____________. \n2. The type of system integration that consolidates systems at the same level of IT architecture is called \n____________. \n3. ____________ refers to the communication pathways that connect system components. \n4. The method of standardizing data exchange between systems using universal data formats is called \n____________. \n5. A ____________ system is embedded within other devices and specializes in specific functions. \n \nModified True or False: \n1. True or False: Vertical integration links systems operating at the same level of the IT architecture. \n• If false, modify: Vertical integration links systems at different levels of IT architecture. \n2. True or False: A physical system includes software applications and data models. \n• If false, modify: A physical system includes hardware and networking infrastructure. \n3. True or False: Common Data Format (CDF) integration helps in improving data consistency across systems. \n• If false, modify: CDF integration standardizes data for interoperability and data consistency. \n4. True or False: Embedded systems are designed to manage and process large amounts of data.\n\n• If false, modify: Embedded systems are specialized systems within devices. \n5. True or False: Open systems are isolated from external influences. \n• If false, modify: Closed systems are isolated from external influences. \n \n \nEnumeration: \n \n1. Enumerate the characteristics of a system (4 items): \n• Interconnected Components \n• Defined Boundaries \n• Purpose (Objective) \n• Inputs and Outputs \n \n2. List the types of IT systems (3 items): \n• Computer Systems \n• Information Systems \n• Embedded Systems \n \n3. Enumerate the challenges in system integration (6 items): \n• Compatibility issues \n• Lack of standardization \n• Security risks \n• Cultural and organizational differences \n• High costs and resource allocation \n• Maintenance and scalability issues \n \n4. List the benefits of system integration (3 items): \n• Enhanced operational efficiency \n• Improved communication and data sharing \n• Reduced redundancy and increased performance \n \n5. Enumerate the components of an IT system (4 items): \n• Hardware \n• Software \n• Data \n• Network',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:06:47','2025-08-29 12:06:47');
INSERT INTO `text_repository` VALUES ('62','249','Reviewer 1: (INTRODUCTION TO SIA) \n \nSystem Overview: \nDefinition:  \nA system is a set of interconnected components working together to achieve a common goal. \nImportance:  \nCrucial for understanding integration and architecture in IT systems. \n \nSystem Characteristics:( I. D. P. O) \n• Interconnected Components: Components depend on each other. \n• Defined Boundaries: Clear separation from the environment. \n• Purpose: Specific goal or objective. \n• Inputs & Outputs: Systems take inputs, process them, and generate outputs. \n \nTypes of Systems:(P. A. O. C) \n• Physical Systems: Hardware, networking infrastructure. \n• Abstract Systems: Software applications, data models. \n• Open Systems: Interacts with external environments (e.g., web services). \n• Closed Systems: Isolated from external influences (e.g., standalone applications). \n \nIT Systems:(C. I. E) \n• Computer Systems: Hardware, software, and networks. \n• Information Systems: Manages and processes data. \n• Embedded Systems: Systems within other devices (e.g., IoT). \n \nTypes of Integration:(V. H. S. C) \n1. Vertical Integration: Connects different levels of IT architecture within an organization. \nExample: Automotive industry (from raw material to retail). \n2. Horizontal Integration: Links systems operating at the same level. \nExample: ERP system integration across different departments. \n3. Star Integration: Uses a central hub to integrate systems. \nExample: CRM as a central hub for multiple systems. \n4. Common Data Format (CDF): Standardizes data exchange between systems. \nExample: Healthcare systems using HL7 standards. \n \nBenefits of System Integration: (E. I. R.) \n• Enhances efficiency. \n• Improves communication and data sharing. \n• Reduces redundancy. \nChallenges:(C. L. S. C. H. M.) \n• Compatibility issues. \n•  Lack of Standardization \n• Security risks. \n• Cultural and Organizational Differences \n• High Costs and Resource Allocation \n•  Maintenance and Scalability Issues\n\nMultiple Choice: \n \n1. Which of the following best defines a system? \na. A collection of hardware components \nb.  A set of interconnected components working to achieve a goal \nc. A group of isolated processes \nd. An independent unit that functions alone \n2. What is the main purpose of system integration?  \na. To create isolated systems \nb. To improve communication and efficiency between different systems \nc. To decrease the number of components \nd. To increase redundancy in data processing \n3. What type of system interacts with external environments?  \na. Closed system \nb. Abstract system \nc. Open system \nd. Physical system \n4. Which type of integration uses a central hub to connect systems? \na. Vertical integration \nb. Horizontal integration \nc. Star integration \nd. Common Data Format (CDF) integration \n5. Which IT system primarily manages and processes data?  \na. Computer system \nb. Information system \nc. Embedded system \nd. Data network \n \nIdentification: \n1. A system that does not interact with external environments is called a ____________. \n2. The type of system integration that consolidates systems at the same level of IT architecture is called \n____________. \n3. ____________ refers to the communication pathways that connect system components. \n4. The method of standardizing data exchange between systems using universal data formats is called \n____________. \n5. A ____________ system is embedded within other devices and specializes in specific functions. \n \nModified True or False: \n1. True or False: Vertical integration links systems operating at the same level of the IT architecture. \n• If false, modify: Vertical integration links systems at different levels of IT architecture. \n2. True or False: A physical system includes software applications and data models. \n• If false, modify: A physical system includes hardware and networking infrastructure. \n3. True or False: Common Data Format (CDF) integration helps in improving data consistency across systems. \n• If false, modify: CDF integration standardizes data for interoperability and data consistency. \n4. True or False: Embedded systems are designed to manage and process large amounts of data.\n\n• If false, modify: Embedded systems are specialized systems within devices. \n5. True or False: Open systems are isolated from external influences. \n• If false, modify: Closed systems are isolated from external influences. \n \n \nEnumeration: \n \n1. Enumerate the characteristics of a system (4 items): \n• Interconnected Components \n• Defined Boundaries \n• Purpose (Objective) \n• Inputs and Outputs \n \n2. List the types of IT systems (3 items): \n• Computer Systems \n• Information Systems \n• Embedded Systems \n \n3. Enumerate the challenges in system integration (6 items): \n• Compatibility issues \n• Lack of standardization \n• Security risks \n• Cultural and organizational differences \n• High costs and resource allocation \n• Maintenance and scalability issues \n \n4. List the benefits of system integration (3 items): \n• Enhanced operational efficiency \n• Improved communication and data sharing \n• Reduced redundancy and increased performance \n \n5. Enumerate the components of an IT system (4 items): \n• Hardware \n• Software \n• Data \n• Network',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:06:47','2025-08-29 12:06:47');
INSERT INTO `text_repository` VALUES ('63','250','Reviewer 1: (INTRODUCTION TO SIA) \n \nSystem Overview: \nDefinition:  \nA system is a set of interconnected components working together to achieve a common goal. \nImportance:  \nCrucial for understanding integration and architecture in IT systems. \n \nSystem Characteristics:( I. D. P. O) \n• Interconnected Components: Components depend on each other. \n• Defined Boundaries: Clear separation from the environment. \n• Purpose: Specific goal or objective. \n• Inputs & Outputs: Systems take inputs, process them, and generate outputs. \n \nTypes of Systems:(P. A. O. C) \n• Physical Systems: Hardware, networking infrastructure. \n• Abstract Systems: Software applications, data models. \n• Open Systems: Interacts with external environments (e.g., web services). \n• Closed Systems: Isolated from external influences (e.g., standalone applications). \n \nIT Systems:(C. I. E) \n• Computer Systems: Hardware, software, and networks. \n• Information Systems: Manages and processes data. \n• Embedded Systems: Systems within other devices (e.g., IoT). \n \nTypes of Integration:(V. H. S. C) \n1. Vertical Integration: Connects different levels of IT architecture within an organization. \nExample: Automotive industry (from raw material to retail). \n2. Horizontal Integration: Links systems operating at the same level. \nExample: ERP system integration across different departments. \n3. Star Integration: Uses a central hub to integrate systems. \nExample: CRM as a central hub for multiple systems. \n4. Common Data Format (CDF): Standardizes data exchange between systems. \nExample: Healthcare systems using HL7 standards. \n \nBenefits of System Integration: (E. I. R.) \n• Enhances efficiency. \n• Improves communication and data sharing. \n• Reduces redundancy. \nChallenges:(C. L. S. C. H. M.) \n• Compatibility issues. \n•  Lack of Standardization \n• Security risks. \n• Cultural and Organizational Differences \n• High Costs and Resource Allocation \n•  Maintenance and Scalability Issues\n\nMultiple Choice: \n \n1. Which of the following best defines a system? \na. A collection of hardware components \nb.  A set of interconnected components working to achieve a goal \nc. A group of isolated processes \nd. An independent unit that functions alone \n2. What is the main purpose of system integration?  \na. To create isolated systems \nb. To improve communication and efficiency between different systems \nc. To decrease the number of components \nd. To increase redundancy in data processing \n3. What type of system interacts with external environments?  \na. Closed system \nb. Abstract system \nc. Open system \nd. Physical system \n4. Which type of integration uses a central hub to connect systems? \na. Vertical integration \nb. Horizontal integration \nc. Star integration \nd. Common Data Format (CDF) integration \n5. Which IT system primarily manages and processes data?  \na. Computer system \nb. Information system \nc. Embedded system \nd. Data network \n \nIdentification: \n1. A system that does not interact with external environments is called a ____________. \n2. The type of system integration that consolidates systems at the same level of IT architecture is called \n____________. \n3. ____________ refers to the communication pathways that connect system components. \n4. The method of standardizing data exchange between systems using universal data formats is called \n____________. \n5. A ____________ system is embedded within other devices and specializes in specific functions. \n \nModified True or False: \n1. True or False: Vertical integration links systems operating at the same level of the IT architecture. \n• If false, modify: Vertical integration links systems at different levels of IT architecture. \n2. True or False: A physical system includes software applications and data models. \n• If false, modify: A physical system includes hardware and networking infrastructure. \n3. True or False: Common Data Format (CDF) integration helps in improving data consistency across systems. \n• If false, modify: CDF integration standardizes data for interoperability and data consistency. \n4. True or False: Embedded systems are designed to manage and process large amounts of data.\n\n• If false, modify: Embedded systems are specialized systems within devices. \n5. True or False: Open systems are isolated from external influences. \n• If false, modify: Closed systems are isolated from external influences. \n \n \nEnumeration: \n \n1. Enumerate the characteristics of a system (4 items): \n• Interconnected Components \n• Defined Boundaries \n• Purpose (Objective) \n• Inputs and Outputs \n \n2. List the types of IT systems (3 items): \n• Computer Systems \n• Information Systems \n• Embedded Systems \n \n3. Enumerate the challenges in system integration (6 items): \n• Compatibility issues \n• Lack of standardization \n• Security risks \n• Cultural and organizational differences \n• High costs and resource allocation \n• Maintenance and scalability issues \n \n4. List the benefits of system integration (3 items): \n• Enhanced operational efficiency \n• Improved communication and data sharing \n• Reduced redundancy and increased performance \n \n5. Enumerate the components of an IT system (4 items): \n• Hardware \n• Software \n• Data \n• Network',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:08:21','2025-08-29 12:08:21');
INSERT INTO `text_repository` VALUES ('64','250','Reviewer 1: (INTRODUCTION TO SIA) \n \nSystem Overview: \nDefinition:  \nA system is a set of interconnected components working together to achieve a common goal. \nImportance:  \nCrucial for understanding integration and architecture in IT systems. \n \nSystem Characteristics:( I. D. P. O) \n• Interconnected Components: Components depend on each other. \n• Defined Boundaries: Clear separation from the environment. \n• Purpose: Specific goal or objective. \n• Inputs & Outputs: Systems take inputs, process them, and generate outputs. \n \nTypes of Systems:(P. A. O. C) \n• Physical Systems: Hardware, networking infrastructure. \n• Abstract Systems: Software applications, data models. \n• Open Systems: Interacts with external environments (e.g., web services). \n• Closed Systems: Isolated from external influences (e.g., standalone applications). \n \nIT Systems:(C. I. E) \n• Computer Systems: Hardware, software, and networks. \n• Information Systems: Manages and processes data. \n• Embedded Systems: Systems within other devices (e.g., IoT). \n \nTypes of Integration:(V. H. S. C) \n1. Vertical Integration: Connects different levels of IT architecture within an organization. \nExample: Automotive industry (from raw material to retail). \n2. Horizontal Integration: Links systems operating at the same level. \nExample: ERP system integration across different departments. \n3. Star Integration: Uses a central hub to integrate systems. \nExample: CRM as a central hub for multiple systems. \n4. Common Data Format (CDF): Standardizes data exchange between systems. \nExample: Healthcare systems using HL7 standards. \n \nBenefits of System Integration: (E. I. R.) \n• Enhances efficiency. \n• Improves communication and data sharing. \n• Reduces redundancy. \nChallenges:(C. L. S. C. H. M.) \n• Compatibility issues. \n•  Lack of Standardization \n• Security risks. \n• Cultural and Organizational Differences \n• High Costs and Resource Allocation \n•  Maintenance and Scalability Issues\n\nMultiple Choice: \n \n1. Which of the following best defines a system? \na. A collection of hardware components \nb.  A set of interconnected components working to achieve a goal \nc. A group of isolated processes \nd. An independent unit that functions alone \n2. What is the main purpose of system integration?  \na. To create isolated systems \nb. To improve communication and efficiency between different systems \nc. To decrease the number of components \nd. To increase redundancy in data processing \n3. What type of system interacts with external environments?  \na. Closed system \nb. Abstract system \nc. Open system \nd. Physical system \n4. Which type of integration uses a central hub to connect systems? \na. Vertical integration \nb. Horizontal integration \nc. Star integration \nd. Common Data Format (CDF) integration \n5. Which IT system primarily manages and processes data?  \na. Computer system \nb. Information system \nc. Embedded system \nd. Data network \n \nIdentification: \n1. A system that does not interact with external environments is called a ____________. \n2. The type of system integration that consolidates systems at the same level of IT architecture is called \n____________. \n3. ____________ refers to the communication pathways that connect system components. \n4. The method of standardizing data exchange between systems using universal data formats is called \n____________. \n5. A ____________ system is embedded within other devices and specializes in specific functions. \n \nModified True or False: \n1. True or False: Vertical integration links systems operating at the same level of the IT architecture. \n• If false, modify: Vertical integration links systems at different levels of IT architecture. \n2. True or False: A physical system includes software applications and data models. \n• If false, modify: A physical system includes hardware and networking infrastructure. \n3. True or False: Common Data Format (CDF) integration helps in improving data consistency across systems. \n• If false, modify: CDF integration standardizes data for interoperability and data consistency. \n4. True or False: Embedded systems are designed to manage and process large amounts of data.\n\n• If false, modify: Embedded systems are specialized systems within devices. \n5. True or False: Open systems are isolated from external influences. \n• If false, modify: Closed systems are isolated from external influences. \n \n \nEnumeration: \n \n1. Enumerate the characteristics of a system (4 items): \n• Interconnected Components \n• Defined Boundaries \n• Purpose (Objective) \n• Inputs and Outputs \n \n2. List the types of IT systems (3 items): \n• Computer Systems \n• Information Systems \n• Embedded Systems \n \n3. Enumerate the challenges in system integration (6 items): \n• Compatibility issues \n• Lack of standardization \n• Security risks \n• Cultural and organizational differences \n• High costs and resource allocation \n• Maintenance and scalability issues \n \n4. List the benefits of system integration (3 items): \n• Enhanced operational efficiency \n• Improved communication and data sharing \n• Reduced redundancy and increased performance \n \n5. Enumerate the components of an IT system (4 items): \n• Hardware \n• Software \n• Data \n• Network',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:08:21','2025-08-29 12:08:21');
INSERT INTO `text_repository` VALUES ('65','251','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:09:33','2025-08-29 12:09:33');
INSERT INTO `text_repository` VALUES ('66','251','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:09:33','2025-08-29 12:09:33');
INSERT INTO `text_repository` VALUES ('67','252','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:59:22','2025-08-29 12:59:22');
INSERT INTO `text_repository` VALUES ('68','252','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 12:59:22','2025-08-29 12:59:22');
INSERT INTO `text_repository` VALUES ('69','253','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 13:31:16','2025-08-29 13:31:16');
INSERT INTO `text_repository` VALUES ('70','253','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 13:31:16','2025-08-29 13:31:16');
INSERT INTO `text_repository` VALUES ('71','254','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 13:36:20','2025-08-29 13:36:20');
INSERT INTO `text_repository` VALUES ('72','254','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 13:36:20','2025-08-29 13:36:20');
INSERT INTO `text_repository` VALUES ('73','255','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 13:49:00','2025-08-29 13:49:00');
INSERT INTO `text_repository` VALUES ('74','255','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 13:49:00','2025-08-29 13:49:00');
INSERT INTO `text_repository` VALUES ('75','256','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 15:32:14','2025-08-29 15:32:14');
INSERT INTO `text_repository` VALUES ('76','256','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 15:32:14','2025-08-29 15:32:14');
INSERT INTO `text_repository` VALUES ('77','257','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 16:30:59','2025-08-29 16:30:59');
INSERT INTO `text_repository` VALUES ('78','257','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 16:30:59','2025-08-29 16:30:59');
INSERT INTO `text_repository` VALUES ('79','258','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 16:31:30','2025-08-29 16:31:30');
INSERT INTO `text_repository` VALUES ('80','258','Unit I\nIntroduction to Web Systems\n\nTopic Outline\n•History and evolution \nof the web \n•Internet protocols and \nweb architecture \n•Web browsers and \nweb servers\n\n•The World Wide Web, as we know it today, is a \nproduct of decades of technological \nadvancement and innovation. \n•Its roots can be traced back to the early days of \nthe internet, when researchers and scientists \nwere developing interconnected networks to \nshare information and resources.\nHistory and Evolution of the Web\n\n1960s\nThe ARPANET (Advanced Research Projects Agency \nNetwork) is established, laying the groundwork for the \ninternet.\n1989\nTim Berners-Lee develops the Hypertext Markup \nLanguage (HTML), a language for creating structured \ndocuments.\nKey milestones in the evolution of the web\n\nEarly\n1990s\nThe first web browsers (such as Mosaic) and web \nservers emerge, making it possible for people to access \nand create web content.\n1990\nBerners-Lee proposes the concept of the World Wide \nWeb, a global information system based on HTML and \nthe Hypertext Transfer Protocol (HTTP).\n\nLate 1990s \nand early \n2000s\nThe dot-com boom and the rise of e-commerce \ndrive rapid growth in the web.\n2010s\nThe mobile revolution and the emergence of \nsocial media platforms transform the way \npeople interact with the web.\n\nInternet Protocols \nand Web Architecture\n•The internet is a vast network of interconnected \ncomputers that communicate using a set of \nstandardized protocols. \n•These protocols ensure that data can be \ntransmitted reliably and efficiently across the \nnetwork.\n\nThis is a sample text.\nInsert your desired text here.\nSample text\nTCP/IP \n(Transmission \nControl \nProtocol/Intern\net Protocol)\nThe fundamental \nprotocols that govern \ncommunication on the \ninternet.\nHTTP (Hypertext \nTransfer Protocol\nThe protocol used to \ntransfer web pages \nand other data \nbetween web servers \nand web browsers.\nKey internet protocols\n\nA system that translates human-readable domain \nnames into machine-readable IP addresses.\nDNS (Domain Name \nSystem)\nA protocol for transferring files between \ncomputers.\nFTP (File Transfer \nProtocol)\nKey internet protocols\n\nWeb architecture\n•The web is typically structured as a client-server \narchitecture, where clients (web browsers) send \nrequests to servers (web servers) for web content. \n•The server processes the request and sends the \nrequested content back to the client.\n\nWeb Browsers and \nWeb Servers\n\nWeb browsers\nA web browser is a \nsoftware application \nthat allows users to \naccess and view web \ncontent\nPopular web \nbrowsers include:\nGoogle Chrome\nMozilla Firefox\nSafari\nMicrosoft Edge\n\nWeb servers\ncomputer system that delivers \nweb pages to clients. Web servers \ntypically run software such as \nApache\n\nKey components of \na web server\n\nWeb server software\nThe software that handles \nincoming requests and sends out \nresponses\n\nWeb content\nThe files (HTML, CSS, JavaScript, \nimages, etc.) that make up the \nweb pages.\n\nDatabase (optional)\nA database may be used to store \nand retrieve dynamic content.\n\nActivity\nWeb History Timeline\n\nAssign topics:\n \n•Milestone in the history of the web \n(1960s, 1980s, 1990s, 2000s, 2010s).\n\nResearch\n•Identify key events, inventions, or people that contributed to \nthe development of the web.\nCreate timeline\n•Have each group create a timeline on their assigned topic, \nhighlighting the most important events and discoveries.\nPresent and discuss\n•Have each group present their timeline to the class, \nexplaining the significance of the events they included.\n\nWeb \nDevelopment\n\nTopic Outline\n•Roles and \nResponsibilities of Web \nDevelopers\n•Overview of Web \nDevelopment \nTechnologies\n\n•Web developers play a crucial \nrole in creating and maintaining \nwebsites. \n•Their responsibilities can vary \ndepending on their specific \nexpertise and the project \nrequirements. \nRoles and Responsibilities of Web Developers\n\n•Focuses on the \nvisual elements of a \nwebsite, including \nthe layout, design, \nand user interface. \n•They primarily work \nwith HTML, CSS, and \nJavaScript\n\n•Handles the server-side \nlogic and functionality \nof a website, such as \ndatabase interactions \nand API integrations.\n•They often work with \nlanguages like PHP, \nPython, Ruby, or Java.\n\nFull-stack \ndeveloperPossesses skills in both \nfront-end and back-\nend development, \nallowing them to work \non all aspects of a \nwebsite.\n\nUI/UX designer\n•Designs the user interface \nand user experience of a \nwebsite, focusing on \ncreating intuitive and \nvisually appealing designs.\n\nUX designer\nuser experience\n\nCreates the overall look and feel of a website, \nincluding the layout, color scheme, and \ntypography.\n\n•is a professional who creates the visual interface of a website. \n•responsible for designing the User interface, and the visuals of \na website. \n•creates a website design that is visually appealing, user-\nfriendly, and effectively communicates the mission of the \nwebsite.\n\n•38% of visitors will stop engaging with a \nwebsite if the design is unattractive, and \n•48% say the design of the website is the \nmost important factor in determining a \nbusiness’ credibility (Blue Corona)\n•98% of people who’ve had a bad \nwebsite experience will shop with a \ncompetitor (Web FX)\nhttps://www.manypixels.co/blog/web-design/scope-of-service\n\nWeb development \ninvolves a wide range \nof technologies and \ntools\nOverview of Web Development Technologies\n\n•The fundamental language for \ncreating web pages. \n•It defines the structure and \ncontent of a page.\n\nUsed to style HTML elements, \ncontrolling their appearance, \nlayout, and formatting.\n\nA programming language that adds \ninteractivity and dynamic features to \nweb pages.\n\nA popular front-end framework \nthat provides pre-built \ncomponents and styles for \ncreating responsive websites.\n\nActivity\nWebsite/Web \nApplication Critique\n\nInstructions\n1. Choose a Website\n•Select a website to critique. \n•This could be a personal blog, a corporate site, an \ne-commerce platform, or a non-profit \norganization’s website.\n\n2. Review the Website\nPay attention to the following aspects:\n1.Design and Aesthetics: Is the website visually appealing? Are colors, \nfonts, and images used effectively?\n2. Usability: Is the website easy to navigate? Are menus and links \nintuitive? Is information easy to find?\n3. Content Quality: Is the content well-written and informative? Does it \nengage the target audience?\n\n4. Functionality: Do all features \n(forms, buttons, links) work \ncorrectly? Are there any broken \nlinks or errors?\n5. Mobile Responsiveness: How \ndoes the website perform on a \nmobile device? Is it user-friendly \non smaller screens?\n\nStep 3: Use the Critique Guidelines\nRefer to the following critique guidelines to structure \nyour evaluation:\n1.Strengths: List three things the website does well.\n2. Weaknesses: Identify three areas for improvement.\n3. User Experience: Describe your overall experience \nas a user. How did it feel to interact with the site?\n4. Recommendations: Suggest specific changes or \nenhancements that could improve the website.\n\nIntroduction to the Web \nDevelopment Life Cycle\n\nTopic Outline\n•Project Planning and \nRequirements Gathering\n•Web Design and User \nExperience\n•Web Development Process\n\n•The web development life cycle (WDLC) is a \nstructured process that outlines the steps involved \nin creating a website/web application. It helps \nensure that the project is completed efficiently and \neffectively. \nProject Planning and Requirements Gathering\n•Phase of the WDLC is project \nplanning and requirements \ngathering.\n\n•Define project goals \nand objectives.\n•Identify target \naudience and their \nneeds.\n•Determine project \nscope and timeline.\n\n•Assign roles and \nresponsibilities to team \nmembers.\n•Create a project plan \nwith milestones and \ndeadlines.\n\n•Gather information \nabout the website\'s \nfunctionality, features, \nand design preferences\n•Conduct interviews, \nsurveys, and user \nresearch to understand \nuser needs.\n\n•Create detailed \nrequirements \ndocuments, such as \nwireframes and \nmockups.\n\n•Once the requirements are gathered, the next phase \nis web design and user experience (UX). \nWeb Design and User Experience\n•This involves creating the visual \nelements of the website, as well as \nensuring that it is easy to use and \nnavigate.\n\n1. Create wireframes \nand mockups to \nvisualize the layout and \nstructure of the \nwebsite\n\n•wireframe is a set of schematic \n(usually black and white) blocks \nthat outline the arrangement of \nthe elements on the future \nwebsite/app interface. \n•It usually shows the layout of the \nbuttons, visuals, copy, but \ndoesn’t go into details presenting \nonly the main design ideas.\n\nwireframe\n\n•mockup is a page or screen of \nthe finished application \ndesign, as it will look to the \nuser\n•It is colorful, with thought-out \nvisuals and typography, and it \ngives viewers a realistic \nimpression of the future \nproduct’s look.\n\n2. Design the visual elements, \nincluding color scheme, typography, \nand imagery.\n3. Ensure that the design is \nresponsive and looks good on \ndifferent devices.\n\n•Consider usability \nfactors such as \nnavigation, \naccessibility, and load \ntimes.\n•Conduct user testing \nto gather feedback \nand make \nimprovements.\n\n•Ensure that the \nwebsite is intuitive \nand easy to use for \nthe target audience\n\nCOMMON \nMETHODS INCLUDE\n\nCOMMON \nMETHODS INCLUDE\n•GET\n•POST\n•PUT\n•DELETE\n\nGET\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPOST\nPurpose: Send data \nto the server to be \nprocessed\nExample: Submitting \na form with user \ninput\n\nPUT\nPurpose: Update \nexisting data on the \nserver\nExample: Modifying \nuser profile \ninformation\n\nDELETEPurpose: Remove \ndata from the server\nExample: Deleting a \nuser account\n\nSTATUS CODES\nHTTP RESPONSES \nINCLUDE STATUS CODES \nTHAT INDICATE THE \nOUTCOME OF THE \nREQUEST\n\nEXAMPLE STATUS OF CODE\n\n200 OK\nThe request was \nsuccessful, and the server \nhas returned the \nrequested data\nExample Use: When a \nuser accesses a web \npage, and the page \nloads successfully\n\n404 \nNOT FOUND\nThe requested resource was \nnot found on the server\nExample Use: When a user \ntries to access a URL that \ndoesn\'t correspond to an \nexisting web page or \nresource\n\n400 BAD \nREQUESTS\nMeaning: The server couldn\'t \nunderstand the request due \nto a client error, often due to \nmalformed syntax\nExample Use: When a user \nsubmits a form with missing \nor incorrect data\n\n401 \nUNAUTHORIZED\nThe request requires \nauthentication, and the \nuser\'s credentials are either \nmissing or invalid\nExample Use: When a user \ntries to access a restricted \npage without logging in\n\n403 \nFORBIDDEN\nMeaning: The server \nunderstood the request, but \nthe server refuses to \nauthorize it\nExample Use: When a user \nattempts to access a \nresource they don\'t have \npermission to view\n\n500 \nINTERNAL \nSERVER ERROR\nThe server encountered an \nerror it couldn\'t handle, \naffecting its ability to fulfill \nthe request\nExample Use: When there\'s \na problem on the server \nside that prevents it from \nprocessing the request\n\n503 \nSERVICE \nUNAVAILABLE\nMeaning: The server is \ncurrently unable to handle \nthe request due to temporary \noverloading or maintenance\nExample Use: When a website \nis undergoing maintenance \nand is temporarily unavailable\n\n302 \nFOUND\nThe requested resource has \nbeen temporarily moved to a \ndifferent location\nExample Use: When a web \npage has been moved, and \nthe server provides a temporary \nredirection to the new URL\n\n301 \nMOVED \nPERMANENTLY\nThe requested resource has \nbeen permanently moved \nto a different location\nExample Use: Similar to the \n302 status but indicating that \nthe redirection is permanent\n\n204 \nNO\nCONTENT\nThe server successfully \nprocessed the request, but \nthere\'s no new content to \nsend back\nExample Use: Commonly used \nwith AJAX requests where the \nclient doesn\'t need a new \npage or content update',NULL,'0','1','completed',NULL,'tesseract','2025-08-29 16:31:30','2025-08-29 16:31:30');
INSERT INTO `text_repository` VALUES ('81','259','',NULL,'0','0','pending',NULL,'tesseract','2025-09-03 02:23:07',NULL);

-- Table structure for transactions

CREATE TABLE `transactions` (
  `transaction_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `file_id` int(11) DEFAULT NULL,
  `users_department_id` int(11) DEFAULT NULL,
  `transaction_status` enum('completed','pending','failed') NOT NULL,
  `transaction_time` datetime NOT NULL,
  `date_updated` datetime NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `description` varchar(255) DEFAULT NULL,
  `transaction_type` enum('upload','send','request','accept','reject','access','scan','relocation','login','other','ocr_process','ocr_retry') NOT NULL DEFAULT 'other',
  PRIMARY KEY (`transaction_id`),
  KEY `fk_transactions_user` (`user_id`),
  KEY `fk_transactions_file` (`file_id`),
  KEY `fk_transactions_users_department` (`users_department_id`),
  KEY `idx_transaction_time` (`transaction_time`),
  KEY `idx_trx_type_status_time` (`transaction_type`,`transaction_status`,`transaction_time`),
  KEY `idx_trx_file` (`file_id`),
  KEY `idx_trx_user` (`user_id`),
  KEY `idx_transactions_transaction_type` (`transaction_type`),
  KEY `idx_transactions_user_file` (`user_id`,`file_id`,`transaction_type`),
  KEY `idx_transactions_user_id_type` (`user_id`,`transaction_type`),
  CONSTRAINT `fk_transactions_file` FOREIGN KEY (`file_id`) REFERENCES `files` (`file_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_transactions_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `fk_transactions_users_department` FOREIGN KEY (`users_department_id`) REFERENCES `user_department_assignments` (`users_department_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=357 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for transactions
INSERT INTO `transactions` VALUES ('157',NULL,NULL,NULL,'failed','2025-08-20 15:37:03','2025-08-25 20:39:56','Invalid login attempt for username: user','login');
INSERT INTO `transactions` VALUES ('158','15',NULL,NULL,'completed','2025-08-20 15:43:18','2025-08-25 20:39:56','Successful login for username: user','login');
INSERT INTO `transactions` VALUES ('159','15',NULL,NULL,'completed','2025-08-20 15:48:39','2025-08-25 20:39:56','Successful login for username: user','login');
INSERT INTO `transactions` VALUES ('160','15',NULL,NULL,'completed','2025-08-21 18:33:46','2025-08-25 20:39:56','Successful login for username: user','login');
INSERT INTO `transactions` VALUES ('161','15',NULL,NULL,'completed','2025-08-21 18:36:05','2025-08-25 20:39:56','Edited user: user','other');
INSERT INTO `transactions` VALUES ('162','15',NULL,NULL,'completed','2025-08-21 18:37:07','2025-08-25 20:39:56','Successful login for username: user','login');
INSERT INTO `transactions` VALUES ('163','15',NULL,NULL,'completed','2025-08-21 22:10:20','2025-08-25 20:39:56','Successful login for username: user','login');
INSERT INTO `transactions` VALUES ('164','15',NULL,NULL,'completed','2025-08-23 12:00:15','2025-08-25 20:39:56','Successful login for username: user','upload');
INSERT INTO `transactions` VALUES ('165','15',NULL,NULL,'completed','2025-08-23 15:22:23','2025-08-25 20:39:56','Uploaded document','other');
INSERT INTO `transactions` VALUES ('166','15',NULL,NULL,'completed','2025-08-23 15:34:55','2025-08-25 20:39:56','Uploaded document','other');
INSERT INTO `transactions` VALUES ('167','15',NULL,NULL,'completed','2025-08-23 15:44:00','2025-08-25 20:39:56','Uploaded document (file_id: 117)','upload');
INSERT INTO `transactions` VALUES ('168','15',NULL,NULL,'completed','2025-08-23 15:52:13','2025-08-25 20:39:56','Uploaded document (file_id: 118)','upload');
INSERT INTO `transactions` VALUES ('169','15',NULL,NULL,'completed','2025-08-23 16:37:11','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('170','15',NULL,NULL,'completed','2025-08-23 16:47:01','2025-08-25 20:39:56','Uploaded Moodle.docx','upload');
INSERT INTO `transactions` VALUES ('171',NULL,NULL,NULL,'completed','2025-08-23 16:47:01','2025-08-25 20:39:56','OCR processed for file ID 122','ocr_process');
INSERT INTO `transactions` VALUES ('172','15',NULL,NULL,'completed','2025-08-23 18:55:13','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('173','15',NULL,NULL,'completed','2025-08-23 19:58:41','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('174','15',NULL,NULL,'completed','2025-08-23 20:49:34','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('175','15',NULL,NULL,'completed','2025-08-23 21:16:36','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('176','15',NULL,NULL,'completed','2025-08-23 23:01:59','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('177','15',NULL,NULL,'completed','2025-08-23 23:02:16','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('178','15',NULL,NULL,'completed','2025-08-23 23:23:41','2025-08-25 20:39:56','Added user: SwenkaDenka','other');
INSERT INTO `transactions` VALUES ('179','15',NULL,NULL,'completed','2025-08-23 23:37:47','2025-08-25 20:39:56','Deleted user ID: 26','other');
INSERT INTO `transactions` VALUES ('180','15',NULL,NULL,'completed','2025-08-23 23:55:21','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('181','15',NULL,NULL,'completed','2025-08-24 00:42:19','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('182','15',NULL,NULL,'completed','2025-08-24 07:51:19','2025-08-25 20:39:56','Added user: SwenkaDenka','other');
INSERT INTO `transactions` VALUES ('183','15',NULL,NULL,'completed','2025-08-24 08:29:19','2025-08-25 20:39:56','Edited user: Trevor Mundo','other');
INSERT INTO `transactions` VALUES ('184','15',NULL,NULL,'completed','2025-08-24 15:14:00','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('185','15',NULL,NULL,'completed','2025-08-25 12:39:13','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('186','15',NULL,NULL,'completed','2025-08-25 12:40:59','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('187','15',NULL,NULL,'completed','2025-08-25 16:59:40','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('188','15',NULL,NULL,'completed','2025-08-25 17:46:05','2025-08-25 20:39:56','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('189','15',NULL,NULL,'completed','2025-08-25 21:08:42','2025-08-25 21:08:42','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('190','15',NULL,NULL,'completed','2025-08-26 09:22:16','2025-08-26 09:22:16','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('191','15',NULL,NULL,'completed','2025-08-26 11:48:41','2025-08-26 11:48:41','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('192','15',NULL,NULL,'completed','2025-08-26 12:34:40','2025-08-26 12:34:40','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('193','15',NULL,NULL,'completed','2025-08-26 13:52:57','2025-08-26 13:52:57','Added user: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('194','28',NULL,NULL,'completed','2025-08-26 13:53:06','2025-08-26 13:53:06','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('195','15',NULL,NULL,'completed','2025-08-26 14:16:39','2025-08-26 14:16:39','Successful login for username: user','other');
INSERT INTO `transactions` VALUES ('196','15',NULL,NULL,'completed','2025-08-26 14:21:44','2025-08-26 14:21:44','Edited user: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('197','28',NULL,NULL,'completed','2025-08-26 15:44:40','2025-08-26 15:44:40','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('198','28',NULL,NULL,'completed','2025-08-26 16:07:10','2025-08-26 16:07:10','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('199','28',NULL,NULL,'completed','2025-08-26 16:12:59','2025-08-26 16:12:59','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('200','28',NULL,NULL,'completed','2025-08-26 16:30:42','2025-08-26 16:30:42','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('201','28',NULL,NULL,'completed','2025-08-27 06:59:31','2025-08-27 06:59:31','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('202','28',NULL,NULL,'completed','2025-08-27 09:35:29','2025-08-27 09:35:29','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('203','28',NULL,NULL,'completed','2025-08-27 12:15:02','2025-08-27 12:15:02','Uploaded file: COPY-TEST-LAST-again_1.pdf','other');
INSERT INTO `transactions` VALUES ('204','28',NULL,NULL,'completed','2025-08-27 12:16:34','2025-08-27 12:16:34','Uploaded file: COPY-TEST-LAST-again_2.pdf','other');
INSERT INTO `transactions` VALUES ('205','28',NULL,NULL,'completed','2025-08-27 12:16:34','2025-08-27 12:16:34','Triggered OCR for file: COPY-TEST-LAST-again_2.pdf','other');
INSERT INTO `transactions` VALUES ('206','28',NULL,NULL,'completed','2025-08-27 13:17:27','2025-08-27 13:17:27','Uploaded file: COPY-TEST-LAST-again_3.pdf','other');
INSERT INTO `transactions` VALUES ('207','28',NULL,NULL,'completed','2025-08-27 13:17:27','2025-08-27 13:17:27','Triggered OCR for file: COPY-TEST-LAST-again_3.pdf','other');
INSERT INTO `transactions` VALUES ('208','28',NULL,NULL,'completed','2025-08-27 13:18:48','2025-08-27 13:18:48','Uploaded file: COPY-TEST-LAST-again.pdf','other');
INSERT INTO `transactions` VALUES ('209','28',NULL,NULL,'completed','2025-08-27 13:18:48','2025-08-27 13:18:48','Triggered OCR for file: COPY-TEST-LAST-again.pdf','other');
INSERT INTO `transactions` VALUES ('210','28',NULL,NULL,'completed','2025-08-27 13:20:26','2025-08-27 13:20:26','Deleted user ID: 21','other');
INSERT INTO `transactions` VALUES ('211','28',NULL,NULL,'completed','2025-08-27 13:20:32','2025-08-27 13:20:32','Deleted user ID: 10','other');
INSERT INTO `transactions` VALUES ('212','28',NULL,NULL,'completed','2025-08-27 13:22:25','2025-08-27 13:22:25','Edited user: user','other');
INSERT INTO `transactions` VALUES ('213','28',NULL,NULL,'completed','2025-08-27 13:24:37','2025-08-27 13:24:37','Uploaded file: Classification of Social Media_3.pdf','other');
INSERT INTO `transactions` VALUES ('214','28',NULL,NULL,'completed','2025-08-27 13:24:37','2025-08-27 13:24:37','Triggered OCR for file: Classification of Social Media_3.pdf','other');
INSERT INTO `transactions` VALUES ('215','28',NULL,NULL,'completed','2025-08-28 12:33:09','2025-08-28 12:33:09','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('216','28',NULL,NULL,'completed','2025-08-28 14:17:37','2025-08-28 14:17:37','Uploaded file: FileUploadTrends_TESTER.pdf','other');
INSERT INTO `transactions` VALUES ('217','28',NULL,NULL,'completed','2025-08-28 14:17:37','2025-08-28 14:17:37','Triggered OCR for file: FileUploadTrends_TESTER.pdf','other');
INSERT INTO `transactions` VALUES ('218','28',NULL,NULL,'completed','2025-08-28 14:51:35','2025-08-28 14:51:35','Uploaded file: FileUploadTrends_TESTEe.pdf','other');
INSERT INTO `transactions` VALUES ('219','28',NULL,NULL,'completed','2025-08-28 14:51:35','2025-08-28 14:51:35','Triggered OCR for file: FileUploadTrends_TESTEe.pdf','other');
INSERT INTO `transactions` VALUES ('220','28',NULL,NULL,'completed','2025-08-28 14:52:24','2025-08-28 14:52:24','Uploaded file: FileUploadTrends_TESTEe_1.pdf','other');
INSERT INTO `transactions` VALUES ('221','28',NULL,NULL,'completed','2025-08-28 14:52:25','2025-08-28 14:52:25','Triggered OCR for file: FileUploadTrends_TESTEe_1.pdf','other');
INSERT INTO `transactions` VALUES ('222','28',NULL,NULL,'completed','2025-08-28 15:00:21','2025-08-28 15:00:21','Uploaded file: TESTER-FILE.pdf','other');
INSERT INTO `transactions` VALUES ('223','28',NULL,NULL,'completed','2025-08-28 15:00:22','2025-08-28 15:00:22','Triggered OCR for file: TESTER-FILE.pdf','other');
INSERT INTO `transactions` VALUES ('224','28',NULL,NULL,'completed','2025-08-28 22:44:36','2025-08-28 22:44:36','Uploaded file: TESTER-Klee.pdf','other');
INSERT INTO `transactions` VALUES ('225','28',NULL,NULL,'completed','2025-08-28 22:44:36','2025-08-28 22:44:36','Uploaded file: TESTER-Klee_1.pdf','other');
INSERT INTO `transactions` VALUES ('226','28',NULL,NULL,'completed','2025-08-28 22:54:27','2025-08-28 22:54:27','Uploaded file: TESTER-Kleesta.pdf','other');
INSERT INTO `transactions` VALUES ('227','28',NULL,NULL,'completed','2025-08-28 22:54:27','2025-08-28 22:54:27','Uploaded file: TESTER-Kleesta_1.pdf','other');
INSERT INTO `transactions` VALUES ('228','28',NULL,NULL,'completed','2025-08-28 22:59:08','2025-08-28 22:59:08','Uploaded file: TESTER-Kleester.pdf','other');
INSERT INTO `transactions` VALUES ('229','28',NULL,NULL,'completed','2025-08-28 22:59:08','2025-08-28 22:59:08','Uploaded file: TESTER-Kleester_1.pdf','other');
INSERT INTO `transactions` VALUES ('230','28',NULL,NULL,'completed','2025-08-28 23:13:59','2025-08-28 23:13:59','Uploaded file: TESTER-Kleesterx.pdf','other');
INSERT INTO `transactions` VALUES ('231','28',NULL,NULL,'completed','2025-08-28 23:14:00','2025-08-28 23:14:00','Uploaded file: TESTER-Kleesterx_1.pdf','other');
INSERT INTO `transactions` VALUES ('232','28',NULL,NULL,'completed','2025-08-29 00:03:02','2025-08-29 00:03:02','Uploaded file: TESTER-Kleesterxer.pdf','other');
INSERT INTO `transactions` VALUES ('233','28',NULL,NULL,'completed','2025-08-29 00:03:02','2025-08-29 00:03:02','Uploaded file: TESTER-Kleesterxer_1.pdf','other');
INSERT INTO `transactions` VALUES ('234','28',NULL,NULL,'completed','2025-08-29 00:44:44','2025-08-29 00:44:44','Uploaded file: TESTER-OCR.pdf','other');
INSERT INTO `transactions` VALUES ('235','28',NULL,NULL,'completed','2025-08-29 00:44:44','2025-08-29 00:44:44','Uploaded file: TESTER-OCR_1.pdf','other');
INSERT INTO `transactions` VALUES ('236','28',NULL,NULL,'completed','2025-08-29 00:46:35','2025-08-29 00:46:35','Uploaded file: TESTER-OCR_2.pdf','other');
INSERT INTO `transactions` VALUES ('237','28',NULL,NULL,'completed','2025-08-29 00:46:35','2025-08-29 00:46:35','Uploaded file: TESTER-OCR_3.pdf','other');
INSERT INTO `transactions` VALUES ('238','28',NULL,NULL,'completed','2025-08-29 00:58:29','2025-08-29 00:58:29','Uploaded file: TESTER-OCR-ii.pdf','other');
INSERT INTO `transactions` VALUES ('239','28',NULL,NULL,'completed','2025-08-29 00:58:29','2025-08-29 00:58:29','Uploaded file: TESTER-OCR-ii_1.pdf','other');
INSERT INTO `transactions` VALUES ('240','28',NULL,NULL,'completed','2025-08-29 01:00:25','2025-08-29 01:00:25','Uploaded file: TESTER-OCR-iii.pdf','other');
INSERT INTO `transactions` VALUES ('241','28',NULL,NULL,'completed','2025-08-29 01:00:25','2025-08-29 01:00:25','Uploaded file: TESTER-OCR-iii_1.pdf','other');
INSERT INTO `transactions` VALUES ('242','28',NULL,NULL,'completed','2025-08-29 06:09:55','2025-08-29 06:09:55','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('243','28',NULL,NULL,'completed','2025-08-29 06:36:07','2025-08-29 06:36:07','Uploaded file: TESTER-OCR-777.pdf','other');
INSERT INTO `transactions` VALUES ('244','28',NULL,NULL,'completed','2025-08-29 06:36:07','2025-08-29 06:36:07','Uploaded file: TESTER-OCR-777_1.pdf','other');
INSERT INTO `transactions` VALUES ('245','28',NULL,NULL,'completed','2025-08-29 06:43:04','2025-08-29 06:43:04','Uploaded file: png-ocr-TEST.png','other');
INSERT INTO `transactions` VALUES ('246','28',NULL,NULL,'completed','2025-08-29 06:43:04','2025-08-29 06:43:04','Uploaded file: png-ocr-TEST_1.png','other');
INSERT INTO `transactions` VALUES ('247','28',NULL,NULL,'completed','2025-08-29 06:45:53','2025-08-29 06:45:53','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('248','28',NULL,NULL,'completed','2025-08-29 06:48:24','2025-08-29 06:48:24','Uploaded file: png-ocr-TEST-II.png','other');
INSERT INTO `transactions` VALUES ('249','28',NULL,NULL,'completed','2025-08-29 06:48:24','2025-08-29 06:48:24','Uploaded file: png-ocr-TEST-II_1.png','other');
INSERT INTO `transactions` VALUES ('250','28',NULL,NULL,'completed','2025-08-29 06:48:44','2025-08-29 06:48:44','Uploaded file: png-ocr-TEST-II_2.png','other');
INSERT INTO `transactions` VALUES ('251','28',NULL,NULL,'completed','2025-08-29 06:48:44','2025-08-29 06:48:44','Uploaded file: png-ocr-TEST-II_3.png','other');
INSERT INTO `transactions` VALUES ('252','28',NULL,NULL,'completed','2025-08-29 06:50:21','2025-08-29 06:50:21','Uploaded file: png-ocr-TEST-II_4.png','other');
INSERT INTO `transactions` VALUES ('253','28',NULL,NULL,'completed','2025-08-29 06:50:21','2025-08-29 06:50:21','Uploaded file: png-ocr-TEST-II_5.png','other');
INSERT INTO `transactions` VALUES ('254','28',NULL,NULL,'completed','2025-08-29 06:50:32','2025-08-29 06:50:32','Uploaded file: png-ocr-TEST-II_6.png','other');
INSERT INTO `transactions` VALUES ('255','28',NULL,NULL,'completed','2025-08-29 06:50:32','2025-08-29 06:50:32','Uploaded file: png-ocr-TEST-II_7.png','other');
INSERT INTO `transactions` VALUES ('256','28',NULL,NULL,'completed','2025-08-29 07:06:03','2025-08-29 07:06:03','Uploaded file: png-ocr-TEST-II_8.png','other');
INSERT INTO `transactions` VALUES ('257','28',NULL,NULL,'completed','2025-08-29 07:06:03','2025-08-29 07:06:03','Uploaded file: png-ocr-TEST-II_9.png','other');
INSERT INTO `transactions` VALUES ('258','28',NULL,NULL,'completed','2025-08-29 07:21:24','2025-08-29 07:21:24','Uploaded file: png-ocr-TEST-II_10.png','other');
INSERT INTO `transactions` VALUES ('259','28',NULL,NULL,'completed','2025-08-29 07:21:24','2025-08-29 07:21:24','Uploaded file: png-ocr-TEST-II_11.png','other');
INSERT INTO `transactions` VALUES ('260','28',NULL,NULL,'completed','2025-08-29 07:29:38','2025-08-29 07:29:38','Uploaded file: png-ocr-TEST-II.png','other');
INSERT INTO `transactions` VALUES ('261','28',NULL,NULL,'completed','2025-08-29 07:29:38','2025-08-29 07:29:38','Uploaded file: png-ocr-TEST-II_1.png','other');
INSERT INTO `transactions` VALUES ('262','28',NULL,NULL,'completed','2025-08-29 07:33:50','2025-08-29 07:33:50','Uploaded file: png-ocr-TEST-II.png','other');
INSERT INTO `transactions` VALUES ('263','28',NULL,NULL,'completed','2025-08-29 08:02:08','2025-08-29 08:02:08','Uploaded file: png-ocr-TEST-II_1.png','other');
INSERT INTO `transactions` VALUES ('264','28',NULL,NULL,'completed','2025-08-29 08:02:08','2025-08-29 08:02:08','Uploaded file: png-ocr-TEST-II_2.png','other');
INSERT INTO `transactions` VALUES ('265',NULL,NULL,NULL,'failed','2025-08-29 08:10:21','2025-08-29 08:10:21','File not accessible for file ID 124: Uploads/42956a4854b89778_FlexiContactUserGuide15.01.pdf','ocr_process');
INSERT INTO `transactions` VALUES ('266',NULL,NULL,NULL,'failed','2025-08-29 08:10:22','2025-08-29 08:10:22','File not accessible for file ID 147: Uploads/Users/rivz_rivera/68ae48c262fce_REVIEWER_1Introduction_to_SIA__1_.pdf','ocr_process');
INSERT INTO `transactions` VALUES ('267',NULL,NULL,NULL,'completed','2025-08-29 08:10:22','2025-08-29 08:10:22','OCR processed for file ID 179 with 4 pages (execution time: 0.15992498397827s)','ocr_process');
INSERT INTO `transactions` VALUES ('268',NULL,NULL,NULL,'completed','2025-08-29 08:10:22','2025-08-29 08:10:22','OCR processed for file ID 180 with 4 pages (execution time: 0.14013600349426s)','ocr_process');
INSERT INTO `transactions` VALUES ('269',NULL,NULL,NULL,'failed','2025-08-29 08:10:22','2025-08-29 08:10:22','File not accessible for file ID 181: Uploads/College of Engineering and Technology/R001/C001/L001/B001/F001/COPY-TEST-LAST-again.pdf','ocr_process');
INSERT INTO `transactions` VALUES ('270',NULL,NULL,NULL,'completed','2025-08-29 08:10:22','2025-08-29 08:10:22','OCR processed for file ID 182 with 4 pages (execution time: 0.1412091255188s)','ocr_process');
INSERT INTO `transactions` VALUES ('271',NULL,NULL,NULL,'failed','2025-08-29 08:10:23','2025-08-29 08:10:23','OCR failed for file ID 183: OCR failed to produce output','ocr_process');
INSERT INTO `transactions` VALUES ('272',NULL,NULL,NULL,'failed','2025-08-29 08:10:23','2025-08-29 08:10:23','OCR failed for file ID 184: OCR failed to produce output','ocr_process');
INSERT INTO `transactions` VALUES ('273',NULL,NULL,NULL,'failed','2025-08-29 08:10:23','2025-08-29 08:10:23','OCR failed for file ID 185: OCR failed to produce output','ocr_process');
INSERT INTO `transactions` VALUES ('274','28',NULL,NULL,'completed','2025-08-29 08:18:38','2025-08-29 08:18:38','Uploaded file: png-ocr-TEST-II_3.png','other');
INSERT INTO `transactions` VALUES ('275','28',NULL,NULL,'completed','2025-08-29 08:18:38','2025-08-29 08:18:38','Uploaded file: png-ocr-TEST-II_4.png','other');
INSERT INTO `transactions` VALUES ('276','28',NULL,NULL,'completed','2025-08-29 08:25:25','2025-08-29 08:25:25','Uploaded file: png-ocr-TESER.png','other');
INSERT INTO `transactions` VALUES ('277','28',NULL,NULL,'completed','2025-08-29 08:33:57','2025-08-29 08:33:57','Uploaded file: PNG.png','other');
INSERT INTO `transactions` VALUES ('278','28',NULL,NULL,'completed','2025-08-29 08:34:41','2025-08-29 08:34:41','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('279','28','230',NULL,'completed','2025-08-29 08:43:33','2025-08-29 08:43:33','Uploaded file: Untitled00.png','other');
INSERT INTO `transactions` VALUES ('280',NULL,'230',NULL,'completed','2025-08-29 08:49:58','2025-08-29 08:49:58','OCR processed for file ID 230 with 1 pages (execution time: 1.8577120304108s)','ocr_process');
INSERT INTO `transactions` VALUES ('281','28','231',NULL,'completed','2025-08-29 08:50:58','2025-08-29 08:50:58','Uploaded file: websystem-OCR-test.pdf','other');
INSERT INTO `transactions` VALUES ('282',NULL,'231',NULL,'completed','2025-08-29 08:51:48','2025-08-29 08:51:48','OCR processed for file ID 231 with 2 pages (execution time: 0.16521096229553s)','ocr_process');
INSERT INTO `transactions` VALUES ('283','28','232',NULL,'completed','2025-08-29 09:11:31','2025-08-29 09:11:31','Uploaded file: BASIC LINUX COMMANDS.pdf','other');
INSERT INTO `transactions` VALUES ('284',NULL,'232',NULL,'completed','2025-08-29 09:12:44','2025-08-29 09:12:44','OCR processed for file ID 232 with 2 pages (execution time: 0.47847509384155s)','ocr_process');
INSERT INTO `transactions` VALUES ('285','28',NULL,NULL,'completed','2025-08-29 09:17:03','2025-08-29 09:17:03','Uploaded file: OCR-DATA-ETHICS-Presentation - Copy.pdf','other');
INSERT INTO `transactions` VALUES ('286','28',NULL,NULL,'completed','2025-08-29 09:20:43','2025-08-29 09:20:43','Uploaded file: ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('287','28',NULL,NULL,'completed','2025-08-29 09:24:00','2025-08-29 09:24:00','Uploaded file: ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('288','28',NULL,NULL,'completed','2025-08-29 09:28:52','2025-08-29 09:28:52','Uploaded file: ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('289','28',NULL,NULL,'completed','2025-08-29 09:33:26','2025-08-29 09:33:26','Uploaded file: ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('290',NULL,NULL,NULL,'completed','2025-08-29 09:34:12','2025-08-29 09:34:12','OCR processed for file ID 237 with 15 pages (execution time: 0.18943786621094s)','ocr_process');
INSERT INTO `transactions` VALUES ('291','28',NULL,NULL,'completed','2025-08-29 09:52:29','2025-08-29 09:52:29','Uploaded file: ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('292',NULL,NULL,NULL,'completed','2025-08-29 09:54:13','2025-08-29 09:54:13','OCR processed for file ID 238 with 15 pages (execution time: 1.2907860279083s)','ocr_process');
INSERT INTO `transactions` VALUES ('293','28',NULL,NULL,'completed','2025-08-29 10:05:07','2025-08-29 10:05:07','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('294','28',NULL,NULL,'completed','2025-08-29 10:05:40','2025-08-29 10:05:40','Uploaded file: retrigger-ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('295','28',NULL,NULL,'completed','2025-08-29 10:05:41','2025-08-29 10:05:41','Triggered OCR for file: retrigger-ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('296','28',NULL,NULL,'completed','2025-08-29 10:14:22','2025-08-29 10:14:22','Uploaded file: trigger-ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('297','28',NULL,NULL,'completed','2025-08-29 10:14:22','2025-08-29 10:14:22','Triggered OCR for file: trigger-ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('298','28',NULL,NULL,'completed','2025-08-29 10:46:40','2025-08-29 10:46:40','Uploaded file: tententen-trigger-ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('299','28',NULL,NULL,'completed','2025-08-29 10:46:40','2025-08-29 10:46:40','Triggered OCR for file: tententen-trigger-ocr-Unit 3.pdf','other');
INSERT INTO `transactions` VALUES ('300','28',NULL,NULL,'completed','2025-08-29 11:01:09','2025-08-29 11:01:09','Uploaded file: TYUGASDGBHJDSBHJASDBHJDAS_2.pdf','other');
INSERT INTO `transactions` VALUES ('301','28',NULL,NULL,'completed','2025-08-29 11:01:09','2025-08-29 11:01:09','Triggered OCR for file: TYUGASDGBHJDSBHJASDBHJDAS_2.pdf','other');
INSERT INTO `transactions` VALUES ('302','28',NULL,NULL,'completed','2025-08-29 11:01:09','2025-08-29 11:01:09','Uploaded file: TYUGASDGBHJDSBHJASDBHJDAS_3.pdf','other');
INSERT INTO `transactions` VALUES ('303','28',NULL,NULL,'completed','2025-08-29 11:01:09','2025-08-29 11:01:09','Triggered OCR for file: TYUGASDGBHJDSBHJASDBHJDAS_3.pdf','other');
INSERT INTO `transactions` VALUES ('304','28',NULL,NULL,'completed','2025-08-29 11:15:15','2025-08-29 11:15:15','Uploaded file: rererere-OCR-test.pdf','other');
INSERT INTO `transactions` VALUES ('305','28',NULL,NULL,'completed','2025-08-29 11:15:15','2025-08-29 11:15:15','Triggered OCR for file: rererere-OCR-test.pdf','other');
INSERT INTO `transactions` VALUES ('306','28','245',NULL,'completed','2025-08-29 11:24:23','2025-08-29 11:24:23','Uploaded file: LAST TEST.pdf','other');
INSERT INTO `transactions` VALUES ('307','28','245',NULL,'completed','2025-08-29 11:24:23','2025-08-29 11:24:23','Triggered OCR for file: LAST TEST.pdf','other');
INSERT INTO `transactions` VALUES ('308','28','246',NULL,'completed','2025-08-29 11:28:14','2025-08-29 11:28:14','Uploaded file: LAST-OCR-TEST.pdf','other');
INSERT INTO `transactions` VALUES ('309','28','246',NULL,'completed','2025-08-29 11:28:14','2025-08-29 11:28:14','Triggered OCR for file: LAST-OCR-TEST.pdf','other');
INSERT INTO `transactions` VALUES ('310',NULL,'246',NULL,'completed','2025-08-29 11:31:07','2025-08-29 11:31:07','OCR processed for file ID 246 with 15 pages (execution time: 0.21861910820007s)','ocr_process');
INSERT INTO `transactions` VALUES ('311','28',NULL,NULL,'completed','2025-08-29 11:50:07','2025-08-29 11:50:07','Uploaded file: TESTETSGDTETSTEST.pdf','other');
INSERT INTO `transactions` VALUES ('312','28',NULL,NULL,'completed','2025-08-29 11:50:08','2025-08-29 11:50:08','Triggered OCR for file: TESTETSGDTETSTEST.pdf','other');
INSERT INTO `transactions` VALUES ('313','28','248',NULL,'completed','2025-08-29 12:03:50','2025-08-29 12:03:50','Uploaded file: OCR-DATA-ETHICS-Presentation - Copy.pdf','other');
INSERT INTO `transactions` VALUES ('314','28','248',NULL,'completed','2025-08-29 12:03:51','2025-08-29 12:03:51','Triggered OCR for file: OCR-DATA-ETHICS-Presentation - Copy.pdf','other');
INSERT INTO `transactions` VALUES ('315','28','249',NULL,'completed','2025-08-29 12:06:06','2025-08-29 12:06:06','Uploaded file: REVIEWER-1Introduction-to-SIA (1).pdf','other');
INSERT INTO `transactions` VALUES ('316','28','249',NULL,'completed','2025-08-29 12:06:07','2025-08-29 12:06:07','Triggered OCR for file: REVIEWER-1Introduction-to-SIA (1).pdf','other');
INSERT INTO `transactions` VALUES ('317',NULL,'249',NULL,'completed','2025-08-29 12:06:47','2025-08-29 12:06:47','OCR processed for file ID 249 with 3 pages (execution time: 0.20827388763428s)','ocr_process');
INSERT INTO `transactions` VALUES ('318','28','250',NULL,'completed','2025-08-29 12:08:20','2025-08-29 12:08:20','Uploaded file: REVIEWER-1Introduction-to-SIA.pdf','other');
INSERT INTO `transactions` VALUES ('319',NULL,'250',NULL,'completed','2025-08-29 12:08:21','2025-08-29 12:08:21','OCR processed for file ID 250 with 3 pages (execution time: 0.20792412757874s)','ocr_process');
INSERT INTO `transactions` VALUES ('320','28','250',NULL,'completed','2025-08-29 12:08:21','2025-08-29 12:08:21','Triggered OCR for file: REVIEWER-1Introduction-to-SIA.pdf','other');
INSERT INTO `transactions` VALUES ('321','28','251',NULL,'completed','2025-08-29 12:09:31','2025-08-29 12:09:31','Uploaded file: CHECK-TEST.pdf','other');
INSERT INTO `transactions` VALUES ('322',NULL,'251',NULL,'completed','2025-08-29 12:09:33','2025-08-29 12:09:33','OCR processed for file ID 251 with 74 pages (execution time: 1.8748321533203s)','ocr_process');
INSERT INTO `transactions` VALUES ('323','28','251',NULL,'completed','2025-08-29 12:09:33','2025-08-29 12:09:33','Triggered OCR for file: CHECK-TEST.pdf','other');
INSERT INTO `transactions` VALUES ('324','28','252',NULL,'completed','2025-08-29 12:59:20','2025-08-29 12:59:20','Uploaded file: Re-CHECK-TEST.pdf','other');
INSERT INTO `transactions` VALUES ('325',NULL,'252',NULL,'completed','2025-08-29 12:59:22','2025-08-29 12:59:22','OCR processed for file ID 252 with 74 pages (execution time: 1.4664251804352s)','ocr_process');
INSERT INTO `transactions` VALUES ('326','28','252',NULL,'completed','2025-08-29 12:59:22','2025-08-29 12:59:22','Triggered OCR for file: Re-CHECK-TEST.pdf','other');
INSERT INTO `transactions` VALUES ('327','28','253',NULL,'completed','2025-08-29 13:31:14','2025-08-29 13:31:14','Uploaded file: Re-CHECK-TEST-again.pdf','other');
INSERT INTO `transactions` VALUES ('328',NULL,'253',NULL,'completed','2025-08-29 13:31:16','2025-08-29 13:31:16','OCR processed for file ID 253 with 74 pages (execution time: 1.3195807933807s)','ocr_process');
INSERT INTO `transactions` VALUES ('329','28','253',NULL,'completed','2025-08-29 13:31:16','2025-08-29 13:31:16','Triggered OCR for file: Re-CHECK-TEST-again.pdf','other');
INSERT INTO `transactions` VALUES ('330','28','254',NULL,'completed','2025-08-29 13:36:18','2025-08-29 13:36:18','Uploaded file: Re-CHECK-TEST-again and again.pdf','other');
INSERT INTO `transactions` VALUES ('331',NULL,'254',NULL,'completed','2025-08-29 13:36:20','2025-08-29 13:36:20','OCR processed for file ID 254 with 74 pages (execution time: 1.3189098834991s)','ocr_process');
INSERT INTO `transactions` VALUES ('332','28','254',NULL,'completed','2025-08-29 13:36:20','2025-08-29 13:36:20','Triggered OCR for file: Re-CHECK-TEST-again and again.pdf','other');
INSERT INTO `transactions` VALUES ('333','28','255',NULL,'completed','2025-08-29 13:48:59','2025-08-29 13:48:59','Uploaded file: Re-CHECK-TESTER-again and again.pdf','other');
INSERT INTO `transactions` VALUES ('334',NULL,'255',NULL,'completed','2025-08-29 13:49:00','2025-08-29 13:49:00','OCR processed for file ID 255 with 74 pages (execution time: 1.2687129974365s)','ocr_process');
INSERT INTO `transactions` VALUES ('335','28','255',NULL,'completed','2025-08-29 13:49:00','2025-08-29 13:49:00','Triggered OCR for file: Re-CHECK-TESTER-again and again.pdf','other');
INSERT INTO `transactions` VALUES ('336','28',NULL,NULL,'completed','2025-08-29 14:42:54','2025-08-29 14:42:54','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('337','28','256',NULL,'completed','2025-08-29 15:32:13','2025-08-29 15:32:13','Uploaded file: HHH.pdf','other');
INSERT INTO `transactions` VALUES ('338',NULL,'256',NULL,'completed','2025-08-29 15:32:14','2025-08-29 15:32:14','OCR processed for file ID 256 with 74 pages (execution time: 1.2840671539307s)','ocr_process');
INSERT INTO `transactions` VALUES ('339','28','256',NULL,'completed','2025-08-29 15:32:14','2025-08-29 15:32:14','Triggered OCR for file: HHH.pdf','other');
INSERT INTO `transactions` VALUES ('340','28',NULL,NULL,'completed','2025-08-29 16:20:39','2025-08-29 16:20:39','Successful login for username: rivz_rivera','other');
INSERT INTO `transactions` VALUES ('341','28','257',NULL,'completed','2025-08-29 16:30:58','2025-08-29 16:30:58','Uploaded file: RETEST.pdf','other');
INSERT INTO `transactions` VALUES ('342',NULL,'257',NULL,'completed','2025-08-29 16:30:59','2025-08-29 16:30:59','OCR processed for file ID 257 with 74 pages (execution time: 1.1137931346893s)','ocr_process');
INSERT INTO `transactions` VALUES ('343','28','257',NULL,'completed','2025-08-29 16:30:59','2025-08-29 16:30:59','Triggered OCR for file: RETEST.pdf','other');
INSERT INTO `transactions` VALUES ('344','28','258',NULL,'completed','2025-08-29 16:31:28','2025-08-29 16:31:28','Uploaded file: RETEST-9898.pdf','other');
INSERT INTO `transactions` VALUES ('345',NULL,'258',NULL,'completed','2025-08-29 16:31:30','2025-08-29 16:31:30','OCR processed for file ID 258 with 74 pages (execution time: 1.083731174469s)','ocr_process');
INSERT INTO `transactions` VALUES ('346','28','258',NULL,'completed','2025-08-29 16:31:30','2025-08-29 16:31:30','Triggered OCR for file: RETEST-9898.pdf','other');
INSERT INTO `transactions` VALUES ('347',NULL,NULL,NULL,'failed','2025-09-01 13:52:34','2025-09-01 13:52:34','Invalid login attempt for username: Sgt Caleb Steven A Lagunilla PA (Res)','other');
INSERT INTO `transactions` VALUES ('348','14',NULL,NULL,'completed','2025-09-01 13:52:38','2025-09-01 13:52:38','Successful login for username: Sgt Caleb Steven A Lagunilla PA (Res)','other');
INSERT INTO `transactions` VALUES ('349','14',NULL,NULL,'completed','2025-09-01 14:17:14','2025-09-01 14:17:14','Successful login for username: Sgt Caleb Steven A Lagunilla PA (Res)','other');
INSERT INTO `transactions` VALUES ('350',NULL,NULL,NULL,'failed','2025-09-02 22:19:09','2025-09-02 22:19:09','Invalid login attempt for username: Sgt Caleb Steven A Lagunilla PA (Res)`','other');
INSERT INTO `transactions` VALUES ('351',NULL,NULL,NULL,'failed','2025-09-02 22:19:16','2025-09-02 22:19:16','Invalid login attempt for username: Sgt Caleb Steven A Lagunilla PA (Res)`','other');
INSERT INTO `transactions` VALUES ('352','14',NULL,NULL,'completed','2025-09-02 22:19:32','2025-09-02 22:19:32','Successful login for username: Sgt Caleb Steven A Lagunilla PA (Res)','other');
INSERT INTO `transactions` VALUES ('353','14','259',NULL,'completed','2025-09-03 02:23:07','2025-09-03 02:23:07','Uploaded file: ACC.txt','');
INSERT INTO `transactions` VALUES ('354','14','259',NULL,'completed','2025-09-03 02:23:07','2025-09-03 02:23:07','Upload file successful:Softcopy ACC.txt','');
INSERT INTO `transactions` VALUES ('355',NULL,NULL,NULL,'failed','2025-09-04 10:23:44','2025-09-04 10:23:44','Invalid login attempt for username: Sgt Caleb Steven A Lagunilla PA (Res)','other');
INSERT INTO `transactions` VALUES ('356','14',NULL,NULL,'completed','2025-09-04 10:23:52','2025-09-04 10:23:52','Successful login for username: Sgt Caleb Steven A Lagunilla PA (Res)','other');

-- Table structure for user_department_assignments

CREATE TABLE `user_department_assignments` (
  `users_department_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `department_id` int(11) NOT NULL,
  PRIMARY KEY (`users_department_id`),
  UNIQUE KEY `idx_user_department` (`user_id`,`department_id`),
  KEY `fk_users_department_department` (`department_id`),
  CONSTRAINT `fk_users_department_department` FOREIGN KEY (`department_id`) REFERENCES `departments` (`department_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_users_department_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for user_department_assignments
INSERT INTO `user_department_assignments` VALUES ('32','15','2');
INSERT INTO `user_department_assignments` VALUES ('33','15','12');
INSERT INTO `user_department_assignments` VALUES ('20','27','1');
INSERT INTO `user_department_assignments` VALUES ('21','27','10');
INSERT INTO `user_department_assignments` VALUES ('19','27','30');
INSERT INTO `user_department_assignments` VALUES ('25','28','3');
INSERT INTO `user_department_assignments` VALUES ('27','28','5');
INSERT INTO `user_department_assignments` VALUES ('29','28','14');
INSERT INTO `user_department_assignments` VALUES ('28','28','24');
INSERT INTO `user_department_assignments` VALUES ('26','28','28');

-- Table structure for users

CREATE TABLE `users` (
  `user_id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `email` varchar(100) NOT NULL,
  `password` varchar(255) NOT NULL,
  `role` enum('admin','client') NOT NULL,
  `profile_picture` varchar(512) DEFAULT NULL COMMENT 'Path to user profile picture',
  `date_created` datetime NOT NULL DEFAULT current_timestamp(),
  `date_updated` datetime NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `personal_folder` varchar(512) DEFAULT NULL COMMENT 'Personal folder path for user',
  PRIMARY KEY (`user_id`),
  UNIQUE KEY `idx_username` (`username`),
  UNIQUE KEY `idx_email` (`email`),
  KEY `idx_role` (`role`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data for users
INSERT INTO `users` VALUES ('1','AdminUser','admin@example.com','$2y$10$J3z1b3zK7G6kXz1Y6z3X9uJ7X8z1Y9z2K3z4L5z6M7z8N9z0P1z2','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Office of the President/AdminUser');
INSERT INTO `users` VALUES ('12','ADMIN1234','admin1234@example.com','$2y$10$TLlND66RAIX9Mo6D3z/Q9eQlbxsrG8ZVAB9ZLqjrTtHpVidVd4ay6','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/College of Arts and Sciences/AB Economics/ADMIN1234');
INSERT INTO `users` VALUES ('13','newuser','newuser@example.com','$2y$10$hW3hp.Ruo.ian6EEUKoADOxGZUX8enOuwdMhjhO.y85jfUkXswS6i','client',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/College of Engineering and Technology/newuser');
INSERT INTO `users` VALUES ('14','Sgt Caleb Steven A Lagunilla PA (Res)','caleb@example.com','$2y$10$NHLno0YjMoh3NRgB4a76HutxvjLjBGz/5/lKEMypNY5MDH2MHiQBe','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/College of Education/Technology and Livelihood Education/Sgt Caleb Steven A Lagunilla PA (Res)');
INSERT INTO `users` VALUES ('15','user','user@example.com','$2y$10$OVU0nH8jZ7SIec6iNs8Ate8vuxx7xUSM10YePtoUZxhd0FIz3eRXW','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Users/user');
INSERT INTO `users` VALUES ('20','Mary Johnson','mary@example.com','$2y$10$samplehash1','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Office of the President/Mary Johnson');
INSERT INTO `users` VALUES ('22','Susan Kim','susan@example.com','$2y$10$samplehash3','client',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/External Linkages and International Affairs/Susan Kim');
INSERT INTO `users` VALUES ('23','James Brown','james@example.com','$2y$10$samplehash4','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Office of the President/James Brown');
INSERT INTO `users` VALUES ('24','Linda Davis','linda@example.com','$2y$10$samplehash5','client',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Management Information Systems/Linda Davis');
INSERT INTO `users` VALUES ('25','Michael Chen','michael@example.com','$2y$10$samplehash6','admin',NULL,'2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Office of the President/Michael Chen');
INSERT INTO `users` VALUES ('27','SwenkaDenka','sWENKAdENKA@gmail.com','$2y$10$hLRpwL2./lkuHNamf1YJ8eiAhcDfF/VCqGXNW4mi1LJOcAfIIe46G','admin','Uploads/ProfilePictures/SwenkaDenka_profile_68aa53f6f08f5.jpg','2025-08-24 08:20:24','2025-08-24 08:20:33','Uploads/Users/SwenkaDenka');
INSERT INTO `users` VALUES ('28','rivz_rivera','rivzrivera40@gmail.com','$2y$10$nPefeB4wOB3GHxOWmKlcAeJNDXRjMmeuAyb9hYkLgvtfqTDAnvK4W','admin','Uploads/ProfilePictures/rivz_rivera_profile_68ad4bb97e19b.jpg','2025-08-26 13:52:57','2025-08-26 13:52:57','Uploads/Users/rivz_rivera');

-- Table structure for v_document_copies

;

-- Data for v_document_copies
INSERT INTO `v_document_copies` VALUES ('230','Untitled00.png','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('231','websystem-OCR-test.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('232','BASIC LINUX COMMANDS.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('245','LAST TEST.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('246','LAST-OCR-TEST.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('248','OCR-DATA-ETHICS-Presentation - Copy.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('249','REVIEWER-1Introduction-to-SIA (1).pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('250','REVIEWER-1Introduction-to-SIA.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('251','CHECK-TEST.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('252','Re-CHECK-TEST.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('253','Re-CHECK-TEST-again.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('254','Re-CHECK-TEST-again and again.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('255','Re-CHECK-TESTER-again and again.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('256','HHH.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('257','RETEST.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('258','RETEST-9898.pdf','0',NULL,NULL);
INSERT INTO `v_document_copies` VALUES ('259','ACC.txt','0',NULL,NULL);

-- Table structure for v_file_activity

;

-- Data for v_file_activity
INSERT INTO `v_file_activity` VALUES ('157','2025-08-20 15:37:03','failed','login',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('158','2025-08-20 15:43:18','completed','login','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('159','2025-08-20 15:48:39','completed','login','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('160','2025-08-21 18:33:46','completed','login','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('161','2025-08-21 18:36:05','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('162','2025-08-21 18:37:07','completed','login','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('163','2025-08-21 22:10:20','completed','login','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('164','2025-08-23 12:00:15','completed','upload','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('165','2025-08-23 15:22:23','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('166','2025-08-23 15:34:55','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('167','2025-08-23 15:44:00','completed','upload','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('168','2025-08-23 15:52:13','completed','upload','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('169','2025-08-23 16:37:11','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('170','2025-08-23 16:47:01','completed','upload','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('171','2025-08-23 16:47:01','completed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('172','2025-08-23 18:55:13','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('173','2025-08-23 19:58:41','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('174','2025-08-23 20:49:34','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('175','2025-08-23 21:16:36','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('176','2025-08-23 23:01:59','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('177','2025-08-23 23:02:16','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('178','2025-08-23 23:23:41','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('179','2025-08-23 23:37:47','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('180','2025-08-23 23:55:21','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('181','2025-08-24 00:42:19','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('182','2025-08-24 07:51:19','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('183','2025-08-24 08:29:19','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('184','2025-08-24 15:14:00','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('185','2025-08-25 12:39:13','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('186','2025-08-25 12:40:59','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('187','2025-08-25 16:59:40','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('188','2025-08-25 17:46:05','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('189','2025-08-25 21:08:42','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('190','2025-08-26 09:22:16','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('191','2025-08-26 11:48:41','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('192','2025-08-26 12:34:40','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('193','2025-08-26 13:52:57','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('194','2025-08-26 13:53:06','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('195','2025-08-26 14:16:39','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('196','2025-08-26 14:21:44','completed','other','15','user',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('197','2025-08-26 15:44:40','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('198','2025-08-26 16:07:10','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('199','2025-08-26 16:12:59','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('200','2025-08-26 16:30:42','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('201','2025-08-27 06:59:31','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('202','2025-08-27 09:35:29','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('203','2025-08-27 12:15:02','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('204','2025-08-27 12:16:34','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('205','2025-08-27 12:16:34','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('206','2025-08-27 13:17:27','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('207','2025-08-27 13:17:27','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('208','2025-08-27 13:18:48','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('209','2025-08-27 13:18:48','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('210','2025-08-27 13:20:26','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('211','2025-08-27 13:20:32','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('212','2025-08-27 13:22:25','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('213','2025-08-27 13:24:37','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('214','2025-08-27 13:24:37','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('215','2025-08-28 12:33:09','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('216','2025-08-28 14:17:37','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('217','2025-08-28 14:17:37','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('218','2025-08-28 14:51:35','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('219','2025-08-28 14:51:35','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('220','2025-08-28 14:52:24','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('221','2025-08-28 14:52:25','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('222','2025-08-28 15:00:21','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('223','2025-08-28 15:00:22','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('224','2025-08-28 22:44:36','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('225','2025-08-28 22:44:36','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('226','2025-08-28 22:54:27','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('227','2025-08-28 22:54:27','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('228','2025-08-28 22:59:08','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('229','2025-08-28 22:59:08','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('230','2025-08-28 23:13:59','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('231','2025-08-28 23:14:00','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('232','2025-08-29 00:03:02','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('233','2025-08-29 00:03:02','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('234','2025-08-29 00:44:44','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('235','2025-08-29 00:44:44','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('236','2025-08-29 00:46:35','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('237','2025-08-29 00:46:35','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('238','2025-08-29 00:58:29','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('239','2025-08-29 00:58:29','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('240','2025-08-29 01:00:25','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('241','2025-08-29 01:00:25','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('242','2025-08-29 06:09:55','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('243','2025-08-29 06:36:07','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('244','2025-08-29 06:36:07','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('245','2025-08-29 06:43:04','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('246','2025-08-29 06:43:04','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('247','2025-08-29 06:45:53','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('248','2025-08-29 06:48:24','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('249','2025-08-29 06:48:24','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('250','2025-08-29 06:48:44','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('251','2025-08-29 06:48:44','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('252','2025-08-29 06:50:21','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('253','2025-08-29 06:50:21','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('254','2025-08-29 06:50:32','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('255','2025-08-29 06:50:32','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('256','2025-08-29 07:06:03','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('257','2025-08-29 07:06:03','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('258','2025-08-29 07:21:24','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('259','2025-08-29 07:21:24','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('260','2025-08-29 07:29:38','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('261','2025-08-29 07:29:38','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('262','2025-08-29 07:33:50','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('263','2025-08-29 08:02:08','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('264','2025-08-29 08:02:08','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('265','2025-08-29 08:10:21','failed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('266','2025-08-29 08:10:22','failed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('267','2025-08-29 08:10:22','completed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('268','2025-08-29 08:10:22','completed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('269','2025-08-29 08:10:22','failed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('270','2025-08-29 08:10:22','completed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('271','2025-08-29 08:10:23','failed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('272','2025-08-29 08:10:23','failed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('273','2025-08-29 08:10:23','failed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('274','2025-08-29 08:18:38','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('275','2025-08-29 08:18:38','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('276','2025-08-29 08:25:25','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('277','2025-08-29 08:33:57','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('278','2025-08-29 08:34:41','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('279','2025-08-29 08:43:33','completed','other','28','rivz_rivera','230','Untitled00.png',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('280','2025-08-29 08:49:58','completed','ocr_process',NULL,NULL,'230','Untitled00.png',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('281','2025-08-29 08:50:58','completed','other','28','rivz_rivera','231','websystem-OCR-test.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('282','2025-08-29 08:51:48','completed','ocr_process',NULL,NULL,'231','websystem-OCR-test.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('283','2025-08-29 09:11:31','completed','other','28','rivz_rivera','232','BASIC LINUX COMMANDS.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('284','2025-08-29 09:12:44','completed','ocr_process',NULL,NULL,'232','BASIC LINUX COMMANDS.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('285','2025-08-29 09:17:03','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('286','2025-08-29 09:20:43','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('287','2025-08-29 09:24:00','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('288','2025-08-29 09:28:52','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('289','2025-08-29 09:33:26','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('290','2025-08-29 09:34:12','completed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('291','2025-08-29 09:52:29','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('292','2025-08-29 09:54:13','completed','ocr_process',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('293','2025-08-29 10:05:07','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('294','2025-08-29 10:05:40','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('295','2025-08-29 10:05:41','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('296','2025-08-29 10:14:22','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('297','2025-08-29 10:14:22','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('298','2025-08-29 10:46:40','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('299','2025-08-29 10:46:40','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('300','2025-08-29 11:01:09','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('301','2025-08-29 11:01:09','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('302','2025-08-29 11:01:09','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('303','2025-08-29 11:01:09','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('304','2025-08-29 11:15:15','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('305','2025-08-29 11:15:15','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('306','2025-08-29 11:24:23','completed','other','28','rivz_rivera','245','LAST TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('307','2025-08-29 11:24:23','completed','other','28','rivz_rivera','245','LAST TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('308','2025-08-29 11:28:14','completed','other','28','rivz_rivera','246','LAST-OCR-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('309','2025-08-29 11:28:14','completed','other','28','rivz_rivera','246','LAST-OCR-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('310','2025-08-29 11:31:07','completed','ocr_process',NULL,NULL,'246','LAST-OCR-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('311','2025-08-29 11:50:07','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('312','2025-08-29 11:50:08','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('313','2025-08-29 12:03:50','completed','other','28','rivz_rivera','248','OCR-DATA-ETHICS-Presentation - Copy.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('314','2025-08-29 12:03:51','completed','other','28','rivz_rivera','248','OCR-DATA-ETHICS-Presentation - Copy.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('315','2025-08-29 12:06:06','completed','other','28','rivz_rivera','249','REVIEWER-1Introduction-to-SIA (1).pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('316','2025-08-29 12:06:07','completed','other','28','rivz_rivera','249','REVIEWER-1Introduction-to-SIA (1).pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('317','2025-08-29 12:06:47','completed','ocr_process',NULL,NULL,'249','REVIEWER-1Introduction-to-SIA (1).pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('318','2025-08-29 12:08:20','completed','other','28','rivz_rivera','250','REVIEWER-1Introduction-to-SIA.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('319','2025-08-29 12:08:21','completed','ocr_process',NULL,NULL,'250','REVIEWER-1Introduction-to-SIA.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('320','2025-08-29 12:08:21','completed','other','28','rivz_rivera','250','REVIEWER-1Introduction-to-SIA.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('321','2025-08-29 12:09:31','completed','other','28','rivz_rivera','251','CHECK-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('322','2025-08-29 12:09:33','completed','ocr_process',NULL,NULL,'251','CHECK-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('323','2025-08-29 12:09:33','completed','other','28','rivz_rivera','251','CHECK-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('324','2025-08-29 12:59:20','completed','other','28','rivz_rivera','252','Re-CHECK-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('325','2025-08-29 12:59:22','completed','ocr_process',NULL,NULL,'252','Re-CHECK-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('326','2025-08-29 12:59:22','completed','other','28','rivz_rivera','252','Re-CHECK-TEST.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('327','2025-08-29 13:31:14','completed','other','28','rivz_rivera','253','Re-CHECK-TEST-again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('328','2025-08-29 13:31:16','completed','ocr_process',NULL,NULL,'253','Re-CHECK-TEST-again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('329','2025-08-29 13:31:16','completed','other','28','rivz_rivera','253','Re-CHECK-TEST-again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('330','2025-08-29 13:36:18','completed','other','28','rivz_rivera','254','Re-CHECK-TEST-again and again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('331','2025-08-29 13:36:20','completed','ocr_process',NULL,NULL,'254','Re-CHECK-TEST-again and again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('332','2025-08-29 13:36:20','completed','other','28','rivz_rivera','254','Re-CHECK-TEST-again and again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('333','2025-08-29 13:48:59','completed','other','28','rivz_rivera','255','Re-CHECK-TESTER-again and again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('334','2025-08-29 13:49:00','completed','ocr_process',NULL,NULL,'255','Re-CHECK-TESTER-again and again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('335','2025-08-29 13:49:00','completed','other','28','rivz_rivera','255','Re-CHECK-TESTER-again and again.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('336','2025-08-29 14:42:54','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('337','2025-08-29 15:32:13','completed','other','28','rivz_rivera','256','HHH.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('338','2025-08-29 15:32:14','completed','ocr_process',NULL,NULL,'256','HHH.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('339','2025-08-29 15:32:14','completed','other','28','rivz_rivera','256','HHH.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('340','2025-08-29 16:20:39','completed','other','28','rivz_rivera',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('341','2025-08-29 16:30:58','completed','other','28','rivz_rivera','257','RETEST.pdf',NULL,'C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\RETEST.pdf');
INSERT INTO `v_file_activity` VALUES ('342','2025-08-29 16:30:59','completed','ocr_process',NULL,NULL,'257','RETEST.pdf',NULL,'C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\RETEST.pdf');
INSERT INTO `v_file_activity` VALUES ('343','2025-08-29 16:30:59','completed','other','28','rivz_rivera','257','RETEST.pdf',NULL,'C:\\xampp\\htdocs\\Arc_Hive-DEVELOPMENT\\uploads\\Uploads\\Users\\rivz_rivera\\RETEST.pdf');
INSERT INTO `v_file_activity` VALUES ('344','2025-08-29 16:31:28','completed','other','28','rivz_rivera','258','RETEST-9898.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('345','2025-08-29 16:31:30','completed','ocr_process',NULL,NULL,'258','RETEST-9898.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('346','2025-08-29 16:31:30','completed','other','28','rivz_rivera','258','RETEST-9898.pdf',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('347','2025-09-01 13:52:34','failed','other',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('348','2025-09-01 13:52:38','completed','other','14','Sgt Caleb Steven A Lagunilla PA (Res)',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('349','2025-09-01 14:17:14','completed','other','14','Sgt Caleb Steven A Lagunilla PA (Res)',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('350','2025-09-02 22:19:09','failed','other',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('351','2025-09-02 22:19:16','failed','other',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('352','2025-09-02 22:19:32','completed','other','14','Sgt Caleb Steven A Lagunilla PA (Res)',NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('353','2025-09-03 02:23:07','completed','','14','Sgt Caleb Steven A Lagunilla PA (Res)','259','ACC.txt',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('354','2025-09-03 02:23:07','completed','','14','Sgt Caleb Steven A Lagunilla PA (Res)','259','ACC.txt',NULL,'User_1');
INSERT INTO `v_file_activity` VALUES ('355','2025-09-04 10:23:44','failed','other',NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `v_file_activity` VALUES ('356','2025-09-04 10:23:52','completed','other','14','Sgt Caleb Steven A Lagunilla PA (Res)',NULL,NULL,NULL,NULL);

-- Table structure for v_file_distribution

;

-- Data for v_file_distribution
INSERT INTO `v_file_distribution` VALUES ('230','Untitled00.png','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('231','websystem-OCR-test.pdf','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('232','BASIC LINUX COMMANDS.pdf','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('245','LAST TEST.pdf','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('246','LAST-OCR-TEST.pdf','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('248','OCR-DATA-ETHICS-Presentation - Copy.pdf','Invoice',NULL);
INSERT INTO `v_file_distribution` VALUES ('249','REVIEWER-1Introduction-to-SIA (1).pdf','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('250','REVIEWER-1Introduction-to-SIA.pdf','Diploma',NULL);
INSERT INTO `v_file_distribution` VALUES ('251','CHECK-TEST.pdf','Diploma',NULL);
INSERT INTO `v_file_distribution` VALUES ('252','Re-CHECK-TEST.pdf','Academic Records',NULL);
INSERT INTO `v_file_distribution` VALUES ('253','Re-CHECK-TEST-again.pdf','Diploma',NULL);
INSERT INTO `v_file_distribution` VALUES ('254','Re-CHECK-TEST-again and again.pdf','Meeting',NULL);
INSERT INTO `v_file_distribution` VALUES ('255','Re-CHECK-TESTER-again and again.pdf','Invoice',NULL);
INSERT INTO `v_file_distribution` VALUES ('256','HHH.pdf','Diploma',NULL);
INSERT INTO `v_file_distribution` VALUES ('257','RETEST.pdf','Diploma',NULL);
INSERT INTO `v_file_distribution` VALUES ('258','RETEST-9898.pdf','Diploma',NULL);
INSERT INTO `v_file_distribution` VALUES ('259','ACC.txt','Academic Records',NULL);

-- Table structure for v_file_uploads

;

-- Data for v_file_uploads
INSERT INTO `v_file_uploads` VALUES ('230','Untitled00.png','2025-08-29 08:43:33','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('231','websystem-OCR-test.pdf','2025-08-29 08:50:58','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('232','BASIC LINUX COMMANDS.pdf','2025-08-29 09:11:31','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('245','LAST TEST.pdf','2025-08-29 11:24:23','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('246','LAST-OCR-TEST.pdf','2025-08-29 11:28:14','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('248','OCR-DATA-ETHICS-Presentation - Copy.pdf','2025-08-29 12:03:50','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'5','Invoice');
INSERT INTO `v_file_uploads` VALUES ('249','REVIEWER-1Introduction-to-SIA (1).pdf','2025-08-29 12:06:06','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('250','REVIEWER-1Introduction-to-SIA.pdf','2025-08-29 12:08:20','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'3','Diploma');
INSERT INTO `v_file_uploads` VALUES ('251','CHECK-TEST.pdf','2025-08-29 12:09:31','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'3','Diploma');
INSERT INTO `v_file_uploads` VALUES ('252','Re-CHECK-TEST.pdf','2025-08-29 12:59:20','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'1','Academic Records');
INSERT INTO `v_file_uploads` VALUES ('253','Re-CHECK-TEST-again.pdf','2025-08-29 13:31:14','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'3','Diploma');
INSERT INTO `v_file_uploads` VALUES ('254','Re-CHECK-TEST-again and again.pdf','2025-08-29 13:36:18','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'7','Meeting');
INSERT INTO `v_file_uploads` VALUES ('255','Re-CHECK-TESTER-again and again.pdf','2025-08-29 13:48:59','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'5','Invoice');
INSERT INTO `v_file_uploads` VALUES ('256','HHH.pdf','2025-08-29 15:32:13','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'3','Diploma');
INSERT INTO `v_file_uploads` VALUES ('257','RETEST.pdf','2025-08-29 16:30:58','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'3','Diploma');
INSERT INTO `v_file_uploads` VALUES ('258','RETEST-9898.pdf','2025-08-29 16:31:28','soft_copy',NULL,'28','rivz_rivera',NULL,NULL,'3','Diploma');
INSERT INTO `v_file_uploads` VALUES ('259','ACC.txt','2025-09-03 02:23:07','soft_copy',NULL,'14','Sgt Caleb Steven A Lagunilla PA (Res)',NULL,NULL,'1','Academic Records');

-- Table structure for v_storage_paths

;

-- Data for v_storage_paths
INSERT INTO `v_storage_paths` VALUES ('4','Lab 1');
INSERT INTO `v_storage_paths` VALUES ('5','Lab 1/Cabinet A');
INSERT INTO `v_storage_paths` VALUES ('6','Lab 1/Cabinet A/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('7','Lab 1/Cabinet A/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('8','Lab 1/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('9','Lab 1/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('10','Lab 1/Cabinet A/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('11','Lab 1/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('12','Lab 1/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('13','Lab 1/Cabinet A/Layer 2');
INSERT INTO `v_storage_paths` VALUES ('14','Lab 1/Cabinet A/Layer 2/Box 1');
INSERT INTO `v_storage_paths` VALUES ('15','Lab 1/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('16','Lab 1/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('17','Lab 1/Cabinet A/Layer 2/Box 2');
INSERT INTO `v_storage_paths` VALUES ('18','Lab 1/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('19','Lab 1/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('20','Lab 1/Cabinet B');
INSERT INTO `v_storage_paths` VALUES ('21','Lab 1/Cabinet B/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('22','Lab 1/Cabinet B/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('23','Lab 1/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('24','Lab 1/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('25','Lab 1/Cabinet B/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('26','Lab 1/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('27','Lab 1/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('28','Lab 2');
INSERT INTO `v_storage_paths` VALUES ('29','Lab 2/Cabinet A');
INSERT INTO `v_storage_paths` VALUES ('30','Lab 2/Cabinet A/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('31','Lab 2/Cabinet A/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('32','Lab 2/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('33','Lab 2/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('34','Lab 2/Cabinet A/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('35','Lab 2/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('36','Lab 2/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('37','Lab 2/Cabinet A/Layer 2');
INSERT INTO `v_storage_paths` VALUES ('38','Lab 2/Cabinet A/Layer 2/Box 1');
INSERT INTO `v_storage_paths` VALUES ('39','Lab 2/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('40','Lab 2/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('41','Lab 2/Cabinet A/Layer 2/Box 2');
INSERT INTO `v_storage_paths` VALUES ('42','Lab 2/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('43','Lab 2/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('44','Lab 2/Cabinet B');
INSERT INTO `v_storage_paths` VALUES ('45','Lab 2/Cabinet B/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('46','Lab 2/Cabinet B/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('47','Lab 2/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('48','Lab 2/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('49','Lab 2/Cabinet B/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('50','Lab 2/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('51','Lab 2/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('52','Lab 3');
INSERT INTO `v_storage_paths` VALUES ('53','Lab 3/Cabinet A');
INSERT INTO `v_storage_paths` VALUES ('54','Lab 3/Cabinet A/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('55','Lab 3/Cabinet A/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('56','Lab 3/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('57','Lab 3/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('58','Lab 3/Cabinet A/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('59','Lab 3/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('60','Lab 3/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('61','Lab 3/Cabinet A/Layer 2');
INSERT INTO `v_storage_paths` VALUES ('62','Lab 3/Cabinet A/Layer 2/Box 1');
INSERT INTO `v_storage_paths` VALUES ('63','Lab 3/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('64','Lab 3/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('65','Lab 3/Cabinet A/Layer 2/Box 2');
INSERT INTO `v_storage_paths` VALUES ('66','Lab 3/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('67','Lab 3/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('68','Lab 3/Cabinet B');
INSERT INTO `v_storage_paths` VALUES ('69','Lab 3/Cabinet B/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('70','Lab 3/Cabinet B/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('71','Lab 3/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('72','Lab 3/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('73','Lab 3/Cabinet B/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('74','Lab 3/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('75','Lab 3/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('76','Lab 4');
INSERT INTO `v_storage_paths` VALUES ('77','Lab 4/Cabinet A');
INSERT INTO `v_storage_paths` VALUES ('78','Lab 4/Cabinet A/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('79','Lab 4/Cabinet A/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('80','Lab 4/Cabinet A/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('81','Lab 4/Cabinet A/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('82','Lab 4/Cabinet A/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('83','Lab 4/Cabinet A/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('84','Lab 4/Cabinet A/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('85','Lab 4/Cabinet A/Layer 2');
INSERT INTO `v_storage_paths` VALUES ('86','Lab 4/Cabinet A/Layer 2/Box 1');
INSERT INTO `v_storage_paths` VALUES ('87','Lab 4/Cabinet A/Layer 2/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('88','Lab 4/Cabinet A/Layer 2/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('89','Lab 4/Cabinet A/Layer 2/Box 2');
INSERT INTO `v_storage_paths` VALUES ('90','Lab 4/Cabinet A/Layer 2/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('91','Lab 4/Cabinet A/Layer 2/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('92','Lab 4/Cabinet B');
INSERT INTO `v_storage_paths` VALUES ('93','Lab 4/Cabinet B/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('94','Lab 4/Cabinet B/Layer 1/Box 1');
INSERT INTO `v_storage_paths` VALUES ('95','Lab 4/Cabinet B/Layer 1/Box 1/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('96','Lab 4/Cabinet B/Layer 1/Box 1/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('97','Lab 4/Cabinet B/Layer 1/Box 2');
INSERT INTO `v_storage_paths` VALUES ('98','Lab 4/Cabinet B/Layer 1/Box 2/Folder 1');
INSERT INTO `v_storage_paths` VALUES ('99','Lab 4/Cabinet B/Layer 1/Box 2/Folder 2');
INSERT INTO `v_storage_paths` VALUES ('115','R001');
INSERT INTO `v_storage_paths` VALUES ('116','R001/C001');
INSERT INTO `v_storage_paths` VALUES ('117','R001/C001/L001');
INSERT INTO `v_storage_paths` VALUES ('118','R001/C001/L001/B001');
INSERT INTO `v_storage_paths` VALUES ('119','R001/C001/L001/B001/F001');
INSERT INTO `v_storage_paths` VALUES ('1','Room 101');
INSERT INTO `v_storage_paths` VALUES ('2','Room 101/Cabinet A');
INSERT INTO `v_storage_paths` VALUES ('3','Room 101/Cabinet A/Layer 1');
INSERT INTO `v_storage_paths` VALUES ('100','User_1');
INSERT INTO `v_storage_paths` VALUES ('109','User_10');
INSERT INTO `v_storage_paths` VALUES ('101','User_12');
INSERT INTO `v_storage_paths` VALUES ('110','User_13');
INSERT INTO `v_storage_paths` VALUES ('102','User_14');
INSERT INTO `v_storage_paths` VALUES ('103','User_15');
INSERT INTO `v_storage_paths` VALUES ('104','User_20');
INSERT INTO `v_storage_paths` VALUES ('111','User_21');
INSERT INTO `v_storage_paths` VALUES ('112','User_22');
INSERT INTO `v_storage_paths` VALUES ('105','User_23');
INSERT INTO `v_storage_paths` VALUES ('113','User_24');
INSERT INTO `v_storage_paths` VALUES ('106','User_25');
INSERT INTO `v_storage_paths` VALUES ('107','User_27');
INSERT INTO `v_storage_paths` VALUES ('108','User_28');

-- Table structure for v_users_per_department

CREATE TABLE `v_users_per_department` (
  `department_name` varchar(255) DEFAULT NULL,
  `user_count` bigint(21) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

